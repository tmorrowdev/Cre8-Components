"use strict";(self.webpackChunk_cre8_dev_cre8_react=self.webpackChunk_cre8_dev_cre8_react||[]).push([[15],{"./.storybook/components/Fpo/Fpo.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m:()=>Fpo});__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/classnames@2.3.2/node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js");const Fpo=_ref=>{let{styleModifier,children}=_ref;const componentClassName=classnames__WEBPACK_IMPORTED_MODULE_1___default()("fpo",styleModifier,{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:componentClassName,children})};Fpo.displayName="Fpo";try{Fpo.displayName="Fpo",Fpo.__docgenInfo={description:"Primary UI component for user interaction",displayName:"Fpo",props:{styleModifier:{defaultValue:null,description:"CSS class names that can be appended to the component.",name:"styleModifier",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Child node(s) that can be nested inside component",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[".storybook/components/Fpo/Fpo.tsx#Fpo"]={docgenInfo:Fpo.__docgenInfo,name:"Fpo",path:".storybook/components/Fpo/Fpo.tsx#Fpo"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Button/Button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>Cre8Button});var _lit_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/@lit+react@1.0.7_@types+react@18.2.13/node_modules/@lit/react/index.js"),_cre8_dev_cre8_wc_lib_components_button_button__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/@cre8_dev+cre8-wc@1.0.3_webpack@5.98.0/node_modules/@cre8_dev/cre8-wc/lib/components/button/button.js"),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");const Cre8Button=(0,_lit_react__WEBPACK_IMPORTED_MODULE_0__.a)({react:react__WEBPACK_IMPORTED_MODULE_2__,tagName:"Cre8-button",elementClass:_cre8_dev_cre8_wc_lib_components_button_button__WEBPACK_IMPORTED_MODULE_1__.t});try{Cre8Button.displayName="Cre8Button",Cre8Button.__docgenInfo={description:"The size and state of buttons on the screen serve as visual cues for the user about what they can do and what they should do next. They indicate the availability and priority of the action on the page.\n\n- Buttons are a single call-to-action where a single click performs that action\n- Use buttons when you are performing an action which is almost always on the same page\n- Use a link instead of a button when you're navigating to another place\n\n## How to Use\n\nButtons are distinguished by three key properties:\n\n- **Visual Priority**: Style and size: Primary, Secondary, or Tertiary styles; each with large and small variations\n- **State**: Interaction state: hover/click (press), focus, disabled, and submitting/loading (only for large buttons)\n- **Brand**: Styles determined by the site or component theme\n\n### Usage Guidelines\n\nPrimary, Secondary and Tertiary styles emphasize or de-emphasize an action. They also define\nbackground, font style, and border colors. Large and small sizing assists with visual priority by defining button\nheights, left and right internal padding, and font-size.\n\n#### System Feedback\nEach button has a default and hover/click (press) state that give the user feedback\nthat they have successfully interacted with a button.\nButton presses should always be combined with other types of timely system feedback.\nExamples of system feedback may be a page refresh, exposing additional controls or content,\ndialogs, alerts and notifications.\nIf there is perceived a delay in system response, generally due to technical constraints,\nprovide a progress or loading indicator.\n\n#### Button Text\n\n- Button text should be as short and simple as possible, ideally a maximum of 3 words.\n- Use Title Case for readability.\n- They should not include punctuation (exception: \"Loading...\").\n- They should not be used as an indicator of what happens on the next page, or as a substitute\nfor a progress meter.\n\n#### Button With Icon\n\nFor button with icon:\n- **iconRotateDegree** & **iconFlipDirection** props are optional.\n- They are used to set up the correct dirrection for icons, for example,\narrows, caret up or caret down.\n\n#### Button Styling\n\n- DO use only the styles of the brand you are working on.\n- DO NOT combine styles, even if the page is co-branded.\n\n#### Button Sizes\n- DO always pair like sizes together and maintain the hierarchy of Primary and Secondary/Tertiary.\n- DO NOT mix sizes of buttons when they are used together as a group.\n\n#### Input Pairing\n\nPrimary and Secondary buttons may be paired with input fields.\nOnly one Primary button may appear on each screen.\nUse the Secondary button when there are multiple in-context buttons\nand/or when there is an emphasized page level button.\nWhen used in a form context, the button's `type` needs to be `submit` to pass along form data.\n\n- DO use only large buttons with input fields.\n- DO NOT use small buttons with input fields.",displayName:"Cre8Button",props:{size:{defaultValue:null,description:"Size variants add another way to increase or decrease visual priority of a button.\n- **sm** Shrinks the button typography and overall size from the default. Use when vertical space is constrained.\n- **md** This is the default value for the size.\n- **lg** Increases the button typography and overall size from the default.",name:"size",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"lg"'},{value:'"md"'}]}},rel:{defaultValue:null,description:"Rel if this is an <a> element - this swaps <button> for <a>",name:"rel",required:!1,type:{name:"string"}},text:{defaultValue:null,description:'The button text. Should be as short and simple as possible, ideally a maximum of 3 words.\n- Use Title Case for readability.\n- Should not include punctuation (exception: "Loading...").\n- Should not be used as an indicator of what happens on the next page, or as a substitute for a progress meter.',name:"text",required:!1,type:{name:"string"}},render:{defaultValue:null,description:"Example render, should not be used",name:"render",required:!1,type:{name:"() => TemplateResult<1>"}},variant:{defaultValue:null,description:"Style variant\n- **primary** renders the button used for primary actions. Presents highest visual priority.\n  When grouped with other buttons, only one primary is allowed\n- **secondary** renders a secondary button. Presents a lower visual priority\n- **tertiary** renders a tertiary button. Presents the lowest visual priority.\n  Should be used in limited amounts - consider if a link (`<a>`) would be more appropriate",name:"variant",required:!1,type:{name:"enum",value:[{value:'"secondary"'},{value:'"tertiary"'},{value:'"primary"'}]}},componentClassNames:{defaultValue:null,description:"Abstraction of `classnames` that automatically includes any style modifier\nas well as any set variants.\n\nIt is expected that `variant` would be overridden in a subclass with more\nspecific types, `@property() variant?: 'foo' | 'bar'`\n@param baseClassName",name:"componentClassNames",required:!1,type:{name:"(baseClassName: string, additionalClassNames?: {}) => string"}},slotEmpty:{defaultValue:null,description:"Check if a slot is empty\n@param slotName",name:"slotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},slotNotEmpty:{defaultValue:null,description:"Check if a slot is not empty\n@param slotName",name:"slotNotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},dispatch:{defaultValue:null,description:"Dispatch a custom event.",name:"dispatch",required:!1,type:{name:"({ e, eventName, detailObj, optionsObj, }: Cre8DispatchProps) => CustomEvent<any>"}},renderOptions:{defaultValue:null,description:"@category rendering",name:"renderOptions",required:!1,type:{name:"RenderOptions"}},connectedCallback:{defaultValue:null,description:"Invoked when the component is added to the document's DOM.\n\nIn `connectedCallback()` you should setup tasks that should only occur when\nthe element is connected to the document. The most common of these is\nadding event listeners to nodes external to the element, like a keydown\nevent handler added to the window.\n\n```ts\nconnectedCallback() {\n  super.connectedCallback();\n  addEventListener('keydown', this._handleKeydown);\n}\n```\n\nTypically, anything done in `connectedCallback()` should be undone when the\nelement is disconnected, in `disconnectedCallback()`.\n@category lifecycle",name:"connectedCallback",required:!1,type:{name:"() => void"}},disconnectedCallback:{defaultValue:null,description:"Invoked when the component is removed from the document's DOM.\n\nThis callback is the main signal to the element that it may no longer be\nused. `disconnectedCallback()` should ensure that nothing is holding a\nreference to the element (such as event listeners added to nodes external\nto the element), so that it is free to be garbage collected.\n\n```ts\ndisconnectedCallback() {\n  super.disconnectedCallback();\n  window.removeEventListener('keydown', this._handleKeydown);\n}\n```\n\nAn element may be re-connected after being disconnected.\n@category lifecycle",name:"disconnectedCallback",required:!1,type:{name:"() => void"}},renderRoot:{defaultValue:null,description:"Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot.\n@category rendering",name:"renderRoot",required:!1,type:{name:"HTMLElement | ShadowRoot"}},isUpdatePending:{defaultValue:null,description:"True if there is a pending update as a result of calling `requestUpdate()`.\nShould only be read.\n@category updates",name:"isUpdatePending",required:!1,type:{name:"boolean"}},hasUpdated:{defaultValue:null,description:"Is set to `true` after the first update. The element code cannot assume\nthat `renderRoot` exists before the element `hasUpdated`.\n@category updates",name:"hasUpdated",required:!1,type:{name:"boolean"}},addController:{defaultValue:null,description:"Registers a `ReactiveController` to participate in the element's reactive\nupdate cycle. The element automatically calls into any registered\ncontrollers during its lifecycle callbacks.\n\nIf the element is connected when `addController()` is called, the\ncontroller's `hostConnected()` callback will be immediately called.\n@category controllers",name:"addController",required:!1,type:{name:"(controller: ReactiveController) => void"}},removeController:{defaultValue:null,description:"Removes a `ReactiveController` from the element.\n@category controllers",name:"removeController",required:!1,type:{name:"(controller: ReactiveController) => void"}},attributeChangedCallback:{defaultValue:null,description:"Synchronizes property values when attributes change.\n\nSpecifically, when an attribute is set, the corresponding property is set.\nYou should rarely need to implement this callback. If this method is\noverridden, `super.attributeChangedCallback(name, _old, value)` must be\ncalled.\n\nSee [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\non MDN for more information about the `attributeChangedCallback`.\n@category attributes",name:"attributeChangedCallback",required:!1,type:{name:"(name: string, _old: string, value: string) => void"}},requestUpdate:{defaultValue:null,description:"Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored.\n@param name name of requesting property\n@param oldValue old value of requesting property\n@param options property options to use instead of the previously\nconfigured options\n@category updates",name:"requestUpdate",required:!1,type:{name:"(name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration<unknown, unknown>) => void"}},updateComplete:{defaultValue:null,description:"Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.\n\nTo await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n@return A promise of a boolean that resolves to true if the update completed\nwithout triggering another update.\n@category updates",name:"updateComplete",required:!1,type:{name:"Promise<boolean>"}},svg:{defaultValue:null,description:"svg as a raw string\n- For button with icon, the icon is defined by this prop.\n- Pass in a raw svg as a String for using <cre8-icon>\n- Must include the icon's position with `iconPostion`.",name:"svg",required:!1,type:{name:"string"}},iconRotateDegree:{defaultValue:null,description:"iconRotateDegree is used for <cre8-icon> to set the arrow in the correct direction",name:"iconRotateDegree",required:!1,type:{name:"number"}},iconFlipDirection:{defaultValue:null,description:"iconFlipDirection is used for <cre8-icon> to set the icon in the correct direction",name:"iconFlipDirection",required:!1,type:{name:"string"}},type:{defaultValue:null,description:"Type of button.\n- **button** (default) button has no default behavior and does nothing unless provided some sort\nof client-side trigger\n- **submit** button for submitting form data to a server",name:"type",required:!1,type:{name:"enum",value:[{value:'"button"'},{value:'"submit"'},{value:'"reset"'}]}},fullWidth:{defaultValue:null,description:"Full width button\n@attr {boolean}",name:"fullWidth",required:!1,type:{name:"boolean"}},href:{defaultValue:null,description:"Provide this property if you intend to use button styles for an anchor tag (`<a>`).\nThis changes the component markup from `<button>` usage to `<a>` instead.",name:"href",required:!1,type:{name:"string"}},field:{defaultValue:null,description:"",name:"field",required:!1,type:{name:"HTMLButtonElement"}},formResetCallback:{defaultValue:null,description:"",name:"formResetCallback",required:!1,type:{name:"() => void"}},internals:{defaultValue:null,description:"@protected\n@internal An instance of element internals.\nContains properties and methods that allows the element\nto participate fully in the HTML form it's in.",name:"internals",required:!1,type:{name:"Cre8ElementInternals"}},internalValue:{defaultValue:null,description:"@protected\n@internal Stores the value for the `value` getter and setter.",name:"internalValue",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"The value of the form field.\nSets the value of the form field.\n1. Stores the new value so it can be retrieved by the getter.\n2. Sets the current value of the control.\n3. Updates the actual field.\n4. Rerenders the component.",name:"value",required:!1,type:{name:"string"}},neutral:{defaultValue:null,description:"This property is for a neutral button propery mainly used for the secondary or tertiary button variant.\n@attr {boolean)",name:"neutral",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Disabled attribute\n@attr {boolean}\n\n**NOTE**: Disabled states are used to indicate that an action is temporarily unavailable.\nIn general, using disabled states is NOT advised. It should be clear to the user what actions they must\ntake to activate the button. Real-time, field-level validation can help provide clarity.",name:"disabled",required:!1,type:{name:"boolean"}},inverse:{defaultValue:null,description:"Inverse attribute\n@attr {boolean}\n\nThe inverse prop allows the button to work on either a light or dark surface.",name:"inverse",required:!1,type:{name:"boolean"}},target:{defaultValue:null,description:"Target attribute for a link if providing `href` to style a link as a button\n- **_blank** yields a link that opens in a new tab\n- **_self** yields a link that loads the URL into the same browsing context as the current one.\n  This is the default behavior\n- **_parent** yields a link that loads the URL into the parent browsing context of the current one.\n  If there is no parent, this behaves the same way as _self\n- **_top** yields a link that loads the URL into the top-level browsing context.\n  If there is no parent, this behaves the same way as _self.",name:"target",required:!1,type:{name:"enum",value:[{value:'"_blank"'},{value:'"_self"'},{value:'"_parent"'},{value:'"_top"'}]}},iconName:{defaultValue:null,description:"Deprecated: iconName, use svg instead\nIcon name if including an icon within a button.\nMust include the icon's position with `iconPostion`. This prop is used for <cre8-icon-legacy>\n@deprecated",name:"iconName",required:!1,type:{name:"string"}},iconPosition:{defaultValue:null,description:"Icon position. Must include the name of the icon with `iconName`\n\n- **before** places the icon before the button text\n- **after** places the icon after the button text",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"after"'},{value:'"before"'}]}},hideText:{defaultValue:null,description:"Visually hide button text. Text is still accessible to assistive technology.\nUse this for icon-only buttons for accessibility",name:"hideText",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"* Changes styling to an active state with a spinning icon.\n* Adds accessibility treatment by:\n  * announcing via voiceover when the loading success/error state via a aria-live region\n  * setting `aria-disabled`\n* Disables click events / form submitting while allowing focus (for accessibility)\n@attr {boolean}",name:"loading",required:!1,type:{name:"boolean"}},loadingComplete:{defaultValue:null,description:"* Variant of the loading button that:\n  * Removes loading spinner\n  * Informs the SR user that the loading status is now complete, with visually hidden text in the live area\n@attr {boolean}",name:"loadingComplete",required:!1,type:{name:"boolean"}},buttonAriaExpanded:{defaultValue:null,description:"Button aria expanded attribute",name:"buttonAriaExpanded",required:!1,type:{name:"boolean"}},formSubmit:{defaultValue:null,description:"",name:"formSubmit",required:!1,type:{name:"() => void"}},formReset:{defaultValue:null,description:"",name:"formReset",required:!1,type:{name:"() => void"}},splitButtonType:{defaultValue:null,description:"These two subvariants of the split button style the two seperate buttons to style as a singular button",name:"splitButtonType",required:!1,type:{name:"enum",value:[{value:'"text"'},{value:'"caret"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.tsx#Cre8Button"]={docgenInfo:Cre8Button.__docgenInfo,name:"Cre8Button",path:"src/components/Button/Button.tsx#Cre8Button"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Popover/Popover.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,DefaultWithNoButton:()=>DefaultWithNoButton,PositionDynamic:()=>PositionDynamic,PositionLeft:()=>PositionLeft,PositionRight:()=>PositionRight,PositionTop:()=>PositionTop,SmallPrimaryButton:()=>SmallPrimaryButton,SmallSecondaryButton:()=>SmallSecondaryButton,SmallTertiaryButton:()=>SmallTertiaryButton,WithSlots:()=>WithSlots,WithVisibleOnScroll:()=>WithVisibleOnScroll,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Popover_stories});var decorator=__webpack_require__("../../node_modules/.pnpm/@storybook+addon-actions@7.6.20/node_modules/@storybook/addon-actions/dist/decorator.mjs"),react=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),preview=__webpack_require__("./.storybook/preview.js"),_lit_react=__webpack_require__("./node_modules/.pnpm/@lit+react@1.0.7_@types+react@18.2.13/node_modules/@lit/react/index.js"),popover=__webpack_require__("./node_modules/.pnpm/@cre8_dev+cre8-wc@1.0.3_webpack@5.98.0/node_modules/@cre8_dev/cre8-wc/lib/components/popover/popover.js");const Cre8Popover=(0,_lit_react.a)({react,tagName:"Cre8-popover",elementClass:popover.g,events:{onOpen:"open",onClose:"close"}});try{Cre8Popover.displayName="Cre8Popover",Cre8Popover.__docgenInfo={description:"The Popover is for progressive disclosure of relevant content often hidden behind a help or info icon.\nIts content should be no longer than 3-4 lines in addition to a line of heading text and an optional button.",displayName:"Cre8Popover",props:{onOpen:{defaultValue:null,description:"",name:"onOpen",required:!1,type:{name:"(e: Cre8DomEvent<Cre8Popover, Cre8Popover>) => void"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!1,type:{name:"(e: Cre8DomEvent<Cre8Popover, Cre8Popover>) => void"}},heading:{defaultValue:null,description:"The heading text that appears at the top of the popover panel. Should only be 2-3 lines max.\n@attr {string | undefined}",name:"heading",required:!1,type:{name:"string"}},render:{defaultValue:null,description:"Example render, should not be used",name:"render",required:!1,type:{name:"() => TemplateResult<1>"}},componentClassNames:{defaultValue:null,description:"Abstraction of `classnames` that automatically includes any style modifier\nas well as any set variants.\n\nIt is expected that `variant` would be overridden in a subclass with more\nspecific types, `@property() variant?: 'foo' | 'bar'`\n@param baseClassName",name:"componentClassNames",required:!1,type:{name:"(baseClassName: string, additionalClassNames?: {}) => string"}},slotEmpty:{defaultValue:null,description:"Check if a slot is empty\n@param slotName",name:"slotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},slotNotEmpty:{defaultValue:null,description:"Check if a slot is not empty\n@param slotName",name:"slotNotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},dispatch:{defaultValue:null,description:"Dispatch a custom event.",name:"dispatch",required:!1,type:{name:"({ e, eventName, detailObj, optionsObj, }: Cre8DispatchProps) => CustomEvent<any>"}},renderOptions:{defaultValue:null,description:"@category rendering",name:"renderOptions",required:!1,type:{name:"RenderOptions"}},connectedCallback:{defaultValue:null,description:"Connected Callback Lifecycle\n1. Add window resize event listener\n2. Add window scroll event listener\n3. Add window orientation change event listener\n4. Add mousedown event listener",name:"connectedCallback",required:!1,type:{name:"() => void"}},disconnectedCallback:{defaultValue:null,description:"Disconnected Callback Lifecycle\n1. Remove window resize event listener\n2. Remove window scroll event listener\n3. Remove window orientation change event listener\n4. Remove mousedown event listener",name:"disconnectedCallback",required:!1,type:{name:"() => void"}},renderRoot:{defaultValue:null,description:"Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot.\n@category rendering",name:"renderRoot",required:!1,type:{name:"HTMLElement | ShadowRoot"}},isUpdatePending:{defaultValue:null,description:"True if there is a pending update as a result of calling `requestUpdate()`.\nShould only be read.\n@category updates",name:"isUpdatePending",required:!1,type:{name:"boolean"}},hasUpdated:{defaultValue:null,description:"Is set to `true` after the first update. The element code cannot assume\nthat `renderRoot` exists before the element `hasUpdated`.\n@category updates",name:"hasUpdated",required:!1,type:{name:"boolean"}},addController:{defaultValue:null,description:"Registers a `ReactiveController` to participate in the element's reactive\nupdate cycle. The element automatically calls into any registered\ncontrollers during its lifecycle callbacks.\n\nIf the element is connected when `addController()` is called, the\ncontroller's `hostConnected()` callback will be immediately called.\n@category controllers",name:"addController",required:!1,type:{name:"(controller: ReactiveController) => void"}},removeController:{defaultValue:null,description:"Removes a `ReactiveController` from the element.\n@category controllers",name:"removeController",required:!1,type:{name:"(controller: ReactiveController) => void"}},attributeChangedCallback:{defaultValue:null,description:"Synchronizes property values when attributes change.\n\nSpecifically, when an attribute is set, the corresponding property is set.\nYou should rarely need to implement this callback. If this method is\noverridden, `super.attributeChangedCallback(name, _old, value)` must be\ncalled.\n\nSee [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\non MDN for more information about the `attributeChangedCallback`.\n@category attributes",name:"attributeChangedCallback",required:!1,type:{name:"(name: string, _old: string, value: string) => void"}},requestUpdate:{defaultValue:null,description:"Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored.\n@param name name of requesting property\n@param oldValue old value of requesting property\n@param options property options to use instead of the previously\nconfigured options\n@category updates",name:"requestUpdate",required:!1,type:{name:"(name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration<unknown, unknown>) => void"}},updateComplete:{defaultValue:null,description:"Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.\n\nTo await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n@return A promise of a boolean that resolves to true if the update completed\nwithout triggering another update.\n@category updates",name:"updateComplete",required:!1,type:{name:"Promise<boolean>"}},position:{defaultValue:null,description:"Positions the popover panel absolutely to the trigger\n- **default** positions the popover panel below the trigger\n- **top** positions the popover panel below the trigger\n- **left** positions the popover panel below the trigger\n- **right** positions the popover panel below the trigger\n@attr {string | undefined}",name:"position",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"right"'},{value:'"left"'}]}},isDynamic:{defaultValue:null,description:"The dynamic state for the popover\n- If true, the popover panel placement is determined by its position in the viewport\n- If false, the popover panel placement will be placed according to the position value\n@attr {boolean | undefined}",name:"isDynamic",required:!1,type:{name:"boolean"}},isActiveDynamic:{defaultValue:null,description:"The dynamic active state\n_This property is dynamically set_\n@attr {boolean | undefined}",name:"isActiveDynamic",required:!1,type:{name:"boolean"}},isActive:{defaultValue:null,description:"The active state for the popover\n- If true, the popover panel is visible\n- If false, the popover panel is hidden\n\n_This property is dynamically set_\n@attr {boolean | undefined}",name:"isActive",required:!1,type:{name:"boolean"}},isRTL:{defaultValue:null,description:"Query the document direction value\n<br/><br/> _*This property is dynamically set_",name:"isRTL",required:!1,type:{name:"boolean"}},firstUpdated:{defaultValue:null,description:"First Updated Lifecycle\n1. Set attribute since aria expanded can't be passed down through the slot",name:"firstUpdated",required:!1,type:{name:"() => void"}},dynamicPosition:{defaultValue:null,description:"Handle all dynamic placement",name:"dynamicPosition",required:!1,type:{name:"() => void"}},removeActive:{defaultValue:null,description:"Remove Active State\n1. If a specific event is fired, remove the active state.",name:"removeActive",required:!1,type:{name:"() => void"}},isVisibleOnScroll:{defaultValue:null,description:"Set to prevent the popover panel from hiding on scroll\n@attr {boolean | undefined}",name:"isVisibleOnScroll",required:!1,type:{name:"boolean"}},_Cre8Popover:{defaultValue:null,description:"Query the popover panel element",name:"_Cre8Popover",required:!1,type:{name:"HTMLElement"}},_Cre8PopoverPanel:{defaultValue:null,description:"Query the popover panel element",name:"_Cre8PopoverPanel",required:!1,type:{name:"HTMLElement"}},_Cre8PopoverTrigger:{defaultValue:null,description:"Query the assigned elements in the trigger slot",name:"_Cre8PopoverTrigger",required:!1,type:{name:"HTMLElement[]"}},_Cre8PopoverFooter:{defaultValue:null,description:"Query the assigned elements in the footer slot",name:"_Cre8PopoverFooter",required:!1,type:{name:"HTMLElement[]"}},addAria:{defaultValue:null,description:"Add aria attributes on the trigger button\n1. Select the element within the trigger slot\n2. Set aria-expanded on the popover trigger to the active state if provided. Otherwise, set to false.\n3 Set the type to button.",name:"addAria",required:!1,type:{name:"() => void"}},handleOnClickOutside:{defaultValue:null,description:"Handle click outside the component\n1. Close the show/hide popover panel on click outside\n2. If the popover panel is already closed then we don't care about outside clicks and we can bail early\n3. By the time a user clicks on the page the shadowRoot will almost certainly be\ndefined, but TypeScript isn't that trusting and sees this.shadowRoot as possibly\nundefined. To work around that we'll check that we have a shadowRoot (and a\nrendered .host) element here to appease the TypeScript compiler. This should never\nactually be shown or run for a human end user.\n4. Check to see if we clicked inside the active panel\n5. If the panel is active and we've clicked outside of the panel then it should be closed.",name:"handleOnClickOutside",required:!1,type:{name:"(e: MouseEvent) => void"}},removeActiveOnScroll:{defaultValue:null,description:"Remove Active State on Scroll\n1. If a scroll event is fired and visibileOnScroll is not true, remove the active state\n2. If the popover height is less than the window height, then allow the active to remove on scroll",name:"removeActiveOnScroll",required:!1,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Popover/Popover.tsx#Cre8Popover"]={docgenInfo:Cre8Popover.__docgenInfo,name:"Cre8Popover",path:"src/components/Popover/Popover.tsx#Cre8Popover"})}catch(__react_docgen_typescript_loader_error){}var Button=__webpack_require__("./src/components/Button/Button.tsx"),Fpo=__webpack_require__("./.storybook/components/Fpo/Fpo.tsx"),jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js");const Popover_stories={title:"Cre8 Components/Popover",component:Cre8Popover,parameters:{status:{type:"inProgress"},controls:{exclude:new RegExp(`${preview.excludeRegexArray.join("|")}|^isRTL$|^removeActive$|^dynamicPosition$|^addAria$|^removeActiveOnScroll$|^onOpen$|^onClose$`)},layout:"centered",actions:{handles:["open","close"]}},decorators:[decorator.w],args:{heading:"Popover Heading",children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button.t,{slot:"trigger",text:"Open Popover",variant:"primary"}),"Lorem ipsum dolor sit amet, consectetur adipiscing elit",(0,jsx_runtime.jsx)(Button.t,{slot:"footer",variant:"secondary",text:"Button",style:{marginLeft:"auto"}})]})},argTypes:{isActive:{control:"boolean"},isActiveDynamic:{control:"boolean"},isDynamic:{control:"boolean"},isVisibleOnScroll:{control:"boolean"},position:{control:"text"}}},Default={args:{}},DefaultWithNoButton={args:{children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button.t,{slot:"trigger",text:"Open Popover",variant:"primary"}),"Lorem ipsum dolor sit amet, consectetur adipiscing elit"]})}},SmallPrimaryButton={args:{children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button.t,{slot:"trigger",text:"Open Popover",variant:"primary"}),"Lorem ipsum dolor sit amet, consectetur adipiscing elit",(0,jsx_runtime.jsx)(Button.t,{slot:"footer",variant:"primary",text:"Button",size:"sm",style:{marginLeft:"auto"}})]})}},SmallSecondaryButton={args:{children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button.t,{slot:"trigger",text:"Open Popover",variant:"primary"}),"Lorem ipsum dolor sit amet, consectetur adipiscing elit",(0,jsx_runtime.jsx)(Button.t,{slot:"footer",variant:"secondary",text:"Button",size:"sm",style:{marginLeft:"auto"}})]})}},SmallTertiaryButton={args:{children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button.t,{slot:"trigger",text:"Open Popover",variant:"primary"}),"Lorem ipsum dolor sit amet, consectetur adipiscing elit",(0,jsx_runtime.jsx)(Button.t,{slot:"footer",variant:"tertiary",text:"Button",size:"sm",style:{marginLeft:"auto"}})]})}},PositionTop={args:{position:"top"}},PositionLeft={args:{position:"left"}},PositionRight={args:{position:"right"}},PositionDynamicTemplate=()=>(0,jsx_runtime.jsxs)("div",{style:{padding:"3rem",height:"100vh",width:"100%",display:"flex",flexDirection:"column",justifyContent:"space-between",alignItems:"center",position:"relative",overflow:"hidden"},children:[(0,jsx_runtime.jsx)("div",{style:{display:"flex",width:"100%",alignItems:"center",justifyContent:"center"},children:(0,jsx_runtime.jsxs)(Cre8Popover,{isDynamic:!0,heading:"Popover Heading",position:"top",children:[(0,jsx_runtime.jsx)(Button.t,{slot:"trigger",text:"Open Popover",variant:"primary"}),"Lorem ipsum dolor sit amet, consectetur adipiscing elit",(0,jsx_runtime.jsx)(Button.t,{slot:"footer",variant:"secondary",text:"Button",style:{marginLeft:"auto"}})]})}),(0,jsx_runtime.jsxs)("div",{style:{display:"flex",width:"100%",alignItems:"center",justifyContent:"space-between"},children:[(0,jsx_runtime.jsxs)(Cre8Popover,{isDynamic:!0,heading:"Popover Heading",position:"left",children:[(0,jsx_runtime.jsx)(Button.t,{slot:"trigger",text:"Open Popover",variant:"primary"}),"Lorem ipsum dolor sit amet, consectetur adipiscing elit",(0,jsx_runtime.jsx)(Button.t,{slot:"footer",variant:"secondary",text:"Button",style:{marginLeft:"auto"}})]}),(0,jsx_runtime.jsxs)(Cre8Popover,{isDynamic:!0,heading:"Popover Heading",position:"right",children:[(0,jsx_runtime.jsx)(Button.t,{slot:"trigger",text:"Open Popover",variant:"primary"}),"Lorem ipsum dolor sit amet, consectetur adipiscing elit",(0,jsx_runtime.jsx)(Button.t,{slot:"footer",variant:"secondary",text:"Button",style:{marginLeft:"auto"}})]})]}),(0,jsx_runtime.jsx)("div",{style:{display:"flex",width:"100%",alignItems:"center",justifyContent:"center"},children:(0,jsx_runtime.jsxs)(Cre8Popover,{isDynamic:!0,heading:"Popover Heading",children:[(0,jsx_runtime.jsx)(Button.t,{slot:"trigger",text:"Open Popover",variant:"primary"}),"Lorem ipsum dolor sit amet, consectetur adipiscing elit",(0,jsx_runtime.jsx)(Button.t,{slot:"footer",variant:"secondary",text:"Button",style:{marginLeft:"auto"}})]})})]});PositionDynamicTemplate.displayName="PositionDynamicTemplate";const PositionDynamic=PositionDynamicTemplate.bind({});PositionDynamic.args={},PositionDynamic.parameters={layout:"fullscreen"};const WithVisibleOnScrollTemplate=()=>(0,jsx_runtime.jsx)("div",{style:{minHeight:"150vw",height:"100vh",width:"100%",display:"flex",justifyContent:"center",alignItems:"center",position:"relative"},children:(0,jsx_runtime.jsx)("div",{style:{padding:"3rem",position:"absolute",top:"0",left:"50%",transform:"translateX(var(--rtlTranslateX, -50%))"},children:(0,jsx_runtime.jsxs)(Cre8Popover,{isVisibleOnScroll:!0,heading:"Popover Heading",children:[(0,jsx_runtime.jsx)(Button.t,{slot:"trigger",text:"Open Popover",variant:"primary"}),"Lorem ipsum dolor sit amet, consectetur adipiscing elit",(0,jsx_runtime.jsx)(Button.t,{slot:"footer",variant:"secondary",text:"Button",style:{marginLeft:"auto"}})]})})});WithVisibleOnScrollTemplate.displayName="WithVisibleOnScrollTemplate";const WithVisibleOnScroll=WithVisibleOnScrollTemplate.bind({});WithVisibleOnScroll.args={};const WithSlots={args:{heading:"",children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button.t,{slot:"trigger",text:"Open Popover",variant:"primary"}),(0,jsx_runtime.jsx)(Fpo.m,{slot:"header"}),(0,jsx_runtime.jsx)(Fpo.m,{}),(0,jsx_runtime.jsx)(Fpo.m,{slot:"footer"})]})}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},DefaultWithNoButton.parameters={...DefaultWithNoButton.parameters,docs:{...DefaultWithNoButton.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <>\n      <Cre8Button slot="trigger" text="Open Popover" variant="primary"></Cre8Button>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit\n    </>\n  }\n}',...DefaultWithNoButton.parameters?.docs?.source}}},SmallPrimaryButton.parameters={...SmallPrimaryButton.parameters,docs:{...SmallPrimaryButton.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <>\n      <Cre8Button slot="trigger" text="Open Popover" variant="primary"></Cre8Button>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit\n      <Cre8Button slot="footer" variant="primary" text="Button" size="sm" style={{\n        marginLeft: \'auto\'\n      }}></Cre8Button>\n    </>\n  }\n}',...SmallPrimaryButton.parameters?.docs?.source}}},SmallSecondaryButton.parameters={...SmallSecondaryButton.parameters,docs:{...SmallSecondaryButton.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <>\n      <Cre8Button slot="trigger" text="Open Popover" variant="primary"></Cre8Button>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit\n      <Cre8Button slot="footer" variant="secondary" text="Button" size="sm" style={{\n        marginLeft: \'auto\'\n      }}></Cre8Button>\n    </>\n  }\n}',...SmallSecondaryButton.parameters?.docs?.source}}},SmallTertiaryButton.parameters={...SmallTertiaryButton.parameters,docs:{...SmallTertiaryButton.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <>\n      <Cre8Button slot="trigger" text="Open Popover" variant="primary"></Cre8Button>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit\n      <Cre8Button slot="footer" variant="tertiary" text="Button" size="sm" style={{\n        marginLeft: \'auto\'\n      }}></Cre8Button>\n    </>\n  }\n}',...SmallTertiaryButton.parameters?.docs?.source}}},PositionTop.parameters={...PositionTop.parameters,docs:{...PositionTop.parameters?.docs,source:{originalSource:"{\n  args: {\n    position: 'top'\n  }\n}",...PositionTop.parameters?.docs?.source}}},PositionLeft.parameters={...PositionLeft.parameters,docs:{...PositionLeft.parameters?.docs,source:{originalSource:"{\n  args: {\n    position: 'left'\n  }\n}",...PositionLeft.parameters?.docs?.source}}},PositionRight.parameters={...PositionRight.parameters,docs:{...PositionRight.parameters?.docs,source:{originalSource:"{\n  args: {\n    position: 'right'\n  }\n}",...PositionRight.parameters?.docs?.source}}},PositionDynamic.parameters={...PositionDynamic.parameters,docs:{...PositionDynamic.parameters?.docs,source:{originalSource:'() => <div style={{\n  padding: \'3rem\',\n  height: \'100vh\',\n  width: \'100%\',\n  display: \'flex\',\n  flexDirection: \'column\',\n  justifyContent: \'space-between\',\n  alignItems: \'center\',\n  position: \'relative\',\n  overflow: \'hidden\'\n}}>\n    <div style={{\n    display: \'flex\',\n    width: \'100%\',\n    alignItems: \'center\',\n    justifyContent: \'center\'\n  }}>\n      <Cre8Popover isDynamic={true} heading="Popover Heading" position="top">\n        <Cre8Button slot="trigger" text="Open Popover" variant="primary"></Cre8Button>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit\n        <Cre8Button slot="footer" variant="secondary" text="Button" style={{\n        marginLeft: \'auto\'\n      }}></Cre8Button>\n      </Cre8Popover>\n    </div>\n    <div style={{\n    display: \'flex\',\n    width: \'100%\',\n    alignItems: \'center\',\n    justifyContent: \'space-between\'\n  }}>\n      <Cre8Popover isDynamic={true} heading="Popover Heading" position="left">\n        <Cre8Button slot="trigger" text="Open Popover" variant="primary"></Cre8Button>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit\n        <Cre8Button slot="footer" variant="secondary" text="Button" style={{\n        marginLeft: \'auto\'\n      }}></Cre8Button>\n      </Cre8Popover>\n      <Cre8Popover isDynamic={true} heading="Popover Heading" position="right">\n        <Cre8Button slot="trigger" text="Open Popover" variant="primary"></Cre8Button>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit\n        <Cre8Button slot="footer" variant="secondary" text="Button" style={{\n        marginLeft: \'auto\'\n      }}></Cre8Button>\n      </Cre8Popover>\n    </div>\n    <div style={{\n    display: \'flex\',\n    width: \'100%\',\n    alignItems: \'center\',\n    justifyContent: \'center\'\n  }}>\n      <Cre8Popover isDynamic={true} heading="Popover Heading">\n        <Cre8Button slot="trigger" text="Open Popover" variant="primary"></Cre8Button>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit\n        <Cre8Button slot="footer" variant="secondary" text="Button" style={{\n        marginLeft: \'auto\'\n      }}></Cre8Button>\n      </Cre8Popover>\n    </div>\n  </div>',...PositionDynamic.parameters?.docs?.source}}},WithVisibleOnScroll.parameters={...WithVisibleOnScroll.parameters,docs:{...WithVisibleOnScroll.parameters?.docs,source:{originalSource:"() => <div style={{\n  minHeight: '150vw',\n  height: '100vh',\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  position: 'relative'\n}}>\n    <div style={{\n    padding: '3rem',\n    position: 'absolute',\n    top: '0',\n    left: '50%',\n    transform: 'translateX(var(--rtlTranslateX, -50%))'\n  }}>\n      <Cre8Popover isVisibleOnScroll={true} heading=\"Popover Heading\">\n        <Cre8Button slot=\"trigger\" text=\"Open Popover\" variant=\"primary\"></Cre8Button>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit\n        <Cre8Button slot=\"footer\" variant=\"secondary\" text=\"Button\" style={{\n        marginLeft: 'auto'\n      }}></Cre8Button>\n      </Cre8Popover>\n    </div>\n  </div>",...WithVisibleOnScroll.parameters?.docs?.source}}},WithSlots.parameters={...WithSlots.parameters,docs:{...WithSlots.parameters?.docs,source:{originalSource:'{\n  args: {\n    heading: \'\',\n    children: <>\n      <Cre8Button slot="trigger" text="Open Popover" variant="primary"></Cre8Button>\n      <Fpo slot="header"></Fpo>\n      <Fpo></Fpo>\n      <Fpo slot="footer"></Fpo>\n    </>\n  }\n}',...WithSlots.parameters?.docs?.source}}};const __namedExportsOrder=["Default","DefaultWithNoButton","SmallPrimaryButton","SmallSecondaryButton","SmallTertiaryButton","PositionTop","PositionLeft","PositionRight","PositionDynamic","WithVisibleOnScroll","WithSlots"]}}]);