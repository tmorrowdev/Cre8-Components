"use strict";(self.webpackChunk_cre8_dev_cre8_react=self.webpackChunk_cre8_dev_cre8_react||[]).push([[4287],{"./src/components/Alert/Alert.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,DefaultNotDismissible:()=>DefaultNotDismissible,DefaultWithLink:()=>DefaultWithLink,StrongErrorBanner:()=>StrongErrorBanner,StrongErrorStandAlone:()=>StrongErrorStandAlone,StrongInfoBanner:()=>StrongInfoBanner,StrongInfoStandAlone:()=>StrongInfoStandAlone,StrongNeutralBanner:()=>StrongNeutralBanner,StrongNeutralStandAlone:()=>StrongNeutralStandAlone,StrongNotificationBanner:()=>StrongNotificationBanner,StrongNotificationStandAlone:()=>StrongNotificationStandAlone,StrongSuccessBanner:()=>StrongSuccessBanner,StrongSuccessStandAlone:()=>StrongSuccessStandAlone,StrongWarningBanner:()=>StrongWarningBanner,StrongWarningStandAlone:()=>StrongWarningStandAlone,SubtleErrorBanner:()=>SubtleErrorBanner,SubtleErrorStandAlone:()=>SubtleErrorStandAlone,SubtleInfoBanner:()=>SubtleInfoBanner,SubtleInfoStandAlone:()=>SubtleInfoStandAlone,SubtleNeutralBanner:()=>SubtleNeutralBanner,SubtleNeutralStandAlone:()=>SubtleNeutralStandAlone,SubtleNotificationBanner:()=>SubtleNotificationBanner,SubtleNotificationStandAlone:()=>SubtleNotificationStandAlone,SubtleSuccessBanner:()=>SubtleSuccessBanner,SubtleSuccessStandAlone:()=>SubtleSuccessStandAlone,SubtleWarningBanner:()=>SubtleWarningBanner,SubtleWarningStandAlone:()=>SubtleWarningStandAlone,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Alert_stories});var react=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),preview=__webpack_require__("./.storybook/preview.js"),_lit_react=__webpack_require__("./node_modules/.pnpm/@lit+react@1.0.7_@types+react@18.2.13/node_modules/@lit/react/index.js"),alert_alert=__webpack_require__("./node_modules/.pnpm/@cre8_dev+cre8-wc@1.0.3_webpack@5.98.0/node_modules/@cre8_dev/cre8-wc/lib/components/alert/alert.js");const Cre8Alert=(0,_lit_react.a)({react,tagName:"Cre8-alert",elementClass:alert_alert.$});try{Cre8Alert.displayName="Cre8Alert",Cre8Alert.__docgenInfo={description:"The general purpose of an alert or notification is to draw the userâ€™s attention\nand provide the user with timely, relevant information.\n\n## Alert Styles:\n- There are 6 statuses for 6 types of alerts: 'error', 'info', 'notification', 'neutral', 'warning', 'success'.\nEach alert will have different icon to be displayed in the alert.\n- Users can select two types of alert variants: 'standalone', or 'banner'.\n- User can also choose the alert should be emphasized or not. There are two options: subtle or strong.\n- User can add button or link in the alert.\nIf users choose to emphasize the alert (**strong**), user needs to used **\"inverted\"** prop in button or link.\n- User can choose whether the alert can be dismissed or not",displayName:"Cre8Alert",props:{status:{defaultValue:null,description:"The alert type.",name:"status",required:!1,type:{name:"enum",value:[{value:'"neutral"'},{value:'"error"'},{value:'"warning"'},{value:'"success"'},{value:'"info"'},{value:'"notification"'}]}},render:{defaultValue:null,description:"Example render, should not be used",name:"render",required:!1,type:{name:"() => TemplateResult<1>"}},variant:{defaultValue:null,description:"The alert variant.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"banner"'},{value:'"standalone"'}]}},componentClassNames:{defaultValue:null,description:"Abstraction of `classnames` that automatically includes any style modifier\nas well as any set variants.\n\nIt is expected that `variant` would be overridden in a subclass with more\nspecific types, `@property() variant?: 'foo' | 'bar'`\n@param baseClassName",name:"componentClassNames",required:!1,type:{name:"(baseClassName: string, additionalClassNames?: {}) => string"}},slotEmpty:{defaultValue:null,description:"Check if a slot is empty\n@param slotName",name:"slotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},slotNotEmpty:{defaultValue:null,description:"Check if a slot is not empty\n@param slotName",name:"slotNotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},dispatch:{defaultValue:null,description:"Dispatch a custom event.",name:"dispatch",required:!1,type:{name:"({ e, eventName, detailObj, optionsObj, }: Cre8DispatchProps) => CustomEvent<any>"}},renderOptions:{defaultValue:null,description:"@category rendering",name:"renderOptions",required:!1,type:{name:"RenderOptions"}},connectedCallback:{defaultValue:null,description:"Invoked when the component is added to the document's DOM.\n\nIn `connectedCallback()` you should setup tasks that should only occur when\nthe element is connected to the document. The most common of these is\nadding event listeners to nodes external to the element, like a keydown\nevent handler added to the window.\n\n```ts\nconnectedCallback() {\n  super.connectedCallback();\n  addEventListener('keydown', this._handleKeydown);\n}\n```\n\nTypically, anything done in `connectedCallback()` should be undone when the\nelement is disconnected, in `disconnectedCallback()`.\n@category lifecycle",name:"connectedCallback",required:!1,type:{name:"() => void"}},disconnectedCallback:{defaultValue:null,description:"Invoked when the component is removed from the document's DOM.\n\nThis callback is the main signal to the element that it may no longer be\nused. `disconnectedCallback()` should ensure that nothing is holding a\nreference to the element (such as event listeners added to nodes external\nto the element), so that it is free to be garbage collected.\n\n```ts\ndisconnectedCallback() {\n  super.disconnectedCallback();\n  window.removeEventListener('keydown', this._handleKeydown);\n}\n```\n\nAn element may be re-connected after being disconnected.\n@category lifecycle",name:"disconnectedCallback",required:!1,type:{name:"() => void"}},renderRoot:{defaultValue:null,description:"Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot.\n@category rendering",name:"renderRoot",required:!1,type:{name:"HTMLElement | ShadowRoot"}},isUpdatePending:{defaultValue:null,description:"True if there is a pending update as a result of calling `requestUpdate()`.\nShould only be read.\n@category updates",name:"isUpdatePending",required:!1,type:{name:"boolean"}},hasUpdated:{defaultValue:null,description:"Is set to `true` after the first update. The element code cannot assume\nthat `renderRoot` exists before the element `hasUpdated`.\n@category updates",name:"hasUpdated",required:!1,type:{name:"boolean"}},addController:{defaultValue:null,description:"Registers a `ReactiveController` to participate in the element's reactive\nupdate cycle. The element automatically calls into any registered\ncontrollers during its lifecycle callbacks.\n\nIf the element is connected when `addController()` is called, the\ncontroller's `hostConnected()` callback will be immediately called.\n@category controllers",name:"addController",required:!1,type:{name:"(controller: ReactiveController) => void"}},removeController:{defaultValue:null,description:"Removes a `ReactiveController` from the element.\n@category controllers",name:"removeController",required:!1,type:{name:"(controller: ReactiveController) => void"}},attributeChangedCallback:{defaultValue:null,description:"Synchronizes property values when attributes change.\n\nSpecifically, when an attribute is set, the corresponding property is set.\nYou should rarely need to implement this callback. If this method is\noverridden, `super.attributeChangedCallback(name, _old, value)` must be\ncalled.\n\nSee [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\non MDN for more information about the `attributeChangedCallback`.\n@category attributes",name:"attributeChangedCallback",required:!1,type:{name:"(name: string, _old: string, value: string) => void"}},requestUpdate:{defaultValue:null,description:"Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored.\n@param name name of requesting property\n@param oldValue old value of requesting property\n@param options property options to use instead of the previously\nconfigured options\n@category updates",name:"requestUpdate",required:!1,type:{name:"(name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration<unknown, unknown>) => void"}},updateComplete:{defaultValue:null,description:"Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.\n\nTo await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n@return A promise of a boolean that resolves to true if the update completed\nwithout triggering another update.\n@category updates",name:"updateComplete",required:!1,type:{name:"Promise<boolean>"}},notDismissible:{defaultValue:null,description:"Dismissable property\n1) Adds the ability to close when toggled to true",name:"notDismissible",required:!1,type:{name:"boolean"}},iconTitle:{defaultValue:null,description:"Icon title used for the icon alt text",name:"iconTitle",required:!1,type:{name:"string"}},emphasis:{defaultValue:null,description:"",name:"emphasis",required:!1,type:{name:"enum",value:[{value:'"strong"'},{value:'"subtle"'}]}},iconAlert:{defaultValue:null,description:"",name:"iconAlert",required:!1,type:{name:"string"}},headerText:{defaultValue:null,description:"",name:"headerText",required:!1,type:{name:"string"}},ctaBody:{defaultValue:null,description:"",name:"ctaBody",required:!1,type:{name:"string"}},dismissed:{defaultValue:null,description:"Dismissed property\n1) State that changes to true and is removed when the banner is dismissed",name:"dismissed",required:!1,type:{name:"boolean"}},onDismiss:{defaultValue:null,description:"On banner dismiss\n1) Function that toggles dismissed to true and removes the banner from the UI",name:"onDismiss",required:!1,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Alert/Alert.tsx#Cre8Alert"]={docgenInfo:Cre8Alert.__docgenInfo,name:"Cre8Alert",path:"src/components/Alert/Alert.tsx#Cre8Alert"})}catch(__react_docgen_typescript_loader_error){}var Button=__webpack_require__("./src/components/Button/Button.tsx"),Link=__webpack_require__("./src/components/Link/Link.tsx"),jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js");const Alert_stories={title:"IN DEVELOPMENT/Alert",component:Cre8Alert,parameters:{status:{type:"inProgress"},controls:{exclude:new RegExp(`${preview.excludeRegexArray.join("|")}`)},docs:{story:{height:"250px"}}},argTypes:{children:{control:{type:"text"}},status:{options:["error","info","notification","neutral","success","warning"],control:{type:"select"}},variant:{options:["standalone","banner"],control:{type:"radio"}},emphasis:{options:["subtle","strong"],control:{type:"radio"}},notDismissible:{control:"boolean"}},args:{headerText:"Default Alert",children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("span",{children:"Lorem ipsum dolor sit amet, consectetuer adipiscing"}),(0,jsx_runtime.jsx)(Button.t,{variant:"secondary",slot:"cta",text:"Button",size:"sm",neutral:!0})]})}},Default={args:{}},DefaultWithLink={args:{headerText:"Default Not Dismissible Alert",variant:"standalone",notDismissible:!0,emphasis:"strong",children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("span",{children:"Lorem ipsum dolor sit amet, consectetuer adipiscing"}),(0,jsx_runtime.jsx)(Link.L,{slot:"cta",href:"#",inverted:!0,children:"Link"})]})}},DefaultNotDismissible={args:{headerText:"Default Not Dismissible Alert",variant:"standalone",notDismissible:!0,children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("span",{children:"Lorem ipsum dolor sit amet, consectetuer adipiscing"}),(0,jsx_runtime.jsx)(Link.L,{slot:"cta",href:"#",children:"Link"})]})}},SubtleErrorStandAlone={args:{headerText:"Error Stand Alone",status:"error",variant:"standalone",emphasis:"subtle"}},SubtleInfoStandAlone={args:{headerText:"Info Stand Alone",status:"info",variant:"standalone",emphasis:"subtle"}},SubtleNotificationStandAlone={args:{headerText:"Notification Stand Alone",status:"notification",variant:"standalone",emphasis:"subtle"}},SubtleNeutralStandAlone={args:{headerText:"Neutral Stand Alone",status:"neutral",variant:"standalone",emphasis:"subtle"}},SubtleWarningStandAlone={args:{headerText:"Warning Stand Alone",status:"warning",variant:"standalone",emphasis:"subtle"}},SubtleSuccessStandAlone={args:{headerText:"Success Stand Alone",status:"success",variant:"standalone",emphasis:"subtle"}},StrongErrorStandAlone={args:{headerText:"Error Stand Alone",status:"error",variant:"standalone",emphasis:"strong"}},StrongInfoStandAlone={args:{headerText:"Info Stand Alone",status:"info",variant:"standalone",emphasis:"strong"}},StrongNotificationStandAlone={args:{headerText:"Notification Stand Alone",status:"notification",variant:"standalone",emphasis:"strong"}},StrongNeutralStandAlone={args:{headerText:"Neutral Stand Alone",status:"neutral",variant:"standalone",emphasis:"strong"}},StrongWarningStandAlone={args:{headerText:"Warning Stand Alone",status:"warning",variant:"standalone",emphasis:"strong"}},StrongSuccessStandAlone={args:{headerText:"Success Stand Alone",status:"success",variant:"standalone",emphasis:"strong"}},SubtleErrorBanner={args:{headerText:"Error Stand Alone",status:"error",variant:"banner",emphasis:"subtle"}},SubtleInfoBanner={args:{headerText:"Info Stand Alone",status:"info",variant:"banner",emphasis:"subtle"}},SubtleNotificationBanner={args:{headerText:"Notification Stand Alone",status:"notification",variant:"banner",emphasis:"subtle"}},SubtleNeutralBanner={args:{headerText:"Neutral Stand Alone",status:"neutral",variant:"banner",emphasis:"subtle"}},SubtleWarningBanner={args:{headerText:"Warning Stand Alone",status:"warning",variant:"banner",emphasis:"subtle"}},SubtleSuccessBanner={args:{headerText:"Success Stand Alone",status:"success",variant:"banner",emphasis:"subtle"}},StrongErrorBanner={args:{headerText:"Error Stand Alone",status:"error",variant:"banner",emphasis:"strong"}},StrongInfoBanner={args:{headerText:"Info Stand Alone",status:"info",variant:"banner",emphasis:"strong"}},StrongNotificationBanner={args:{headerText:"Notification Stand Alone",status:"notification",variant:"banner",emphasis:"strong"}},StrongNeutralBanner={args:{headerText:"Neutral Stand Alone",status:"neutral",variant:"banner",emphasis:"strong"}},StrongWarningBanner={args:{headerText:"Warning Stand Alone",status:"warning",variant:"banner",emphasis:"strong"}},StrongSuccessBanner={args:{headerText:"Success Stand Alone",status:"success",variant:"banner",emphasis:"strong"}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},DefaultWithLink.parameters={...DefaultWithLink.parameters,docs:{...DefaultWithLink.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Default Not Dismissible Alert',\n    variant: 'standalone',\n    notDismissible: true,\n    emphasis: 'strong',\n    children: <>\n      <span>Lorem ipsum dolor sit amet, consectetuer adipiscing</span>\n      <Cre8Link slot=\"cta\" href=\"#\" inverted>Link</Cre8Link>\n      </>\n  }\n}",...DefaultWithLink.parameters?.docs?.source}}},DefaultNotDismissible.parameters={...DefaultNotDismissible.parameters,docs:{...DefaultNotDismissible.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Default Not Dismissible Alert',\n    variant: 'standalone',\n    notDismissible: true,\n    children: <>\n      <span>Lorem ipsum dolor sit amet, consectetuer adipiscing</span>\n      <Cre8Link slot=\"cta\" href=\"#\">Link</Cre8Link>\n      </>\n  }\n}",...DefaultNotDismissible.parameters?.docs?.source}}},SubtleErrorStandAlone.parameters={...SubtleErrorStandAlone.parameters,docs:{...SubtleErrorStandAlone.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Error Stand Alone',\n    status: 'error',\n    variant: 'standalone',\n    emphasis: 'subtle'\n  }\n}",...SubtleErrorStandAlone.parameters?.docs?.source}}},SubtleInfoStandAlone.parameters={...SubtleInfoStandAlone.parameters,docs:{...SubtleInfoStandAlone.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Info Stand Alone',\n    status: 'info',\n    variant: 'standalone',\n    emphasis: 'subtle'\n  }\n}",...SubtleInfoStandAlone.parameters?.docs?.source}}},SubtleNotificationStandAlone.parameters={...SubtleNotificationStandAlone.parameters,docs:{...SubtleNotificationStandAlone.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Notification Stand Alone',\n    status: 'notification',\n    variant: 'standalone',\n    emphasis: 'subtle'\n  }\n}",...SubtleNotificationStandAlone.parameters?.docs?.source}}},SubtleNeutralStandAlone.parameters={...SubtleNeutralStandAlone.parameters,docs:{...SubtleNeutralStandAlone.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Neutral Stand Alone',\n    status: 'neutral',\n    variant: 'standalone',\n    emphasis: 'subtle'\n  }\n}",...SubtleNeutralStandAlone.parameters?.docs?.source}}},SubtleWarningStandAlone.parameters={...SubtleWarningStandAlone.parameters,docs:{...SubtleWarningStandAlone.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Warning Stand Alone',\n    status: 'warning',\n    variant: 'standalone',\n    emphasis: 'subtle'\n  }\n}",...SubtleWarningStandAlone.parameters?.docs?.source}}},SubtleSuccessStandAlone.parameters={...SubtleSuccessStandAlone.parameters,docs:{...SubtleSuccessStandAlone.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Success Stand Alone',\n    status: 'success',\n    variant: 'standalone',\n    emphasis: 'subtle'\n  }\n}",...SubtleSuccessStandAlone.parameters?.docs?.source}}},StrongErrorStandAlone.parameters={...StrongErrorStandAlone.parameters,docs:{...StrongErrorStandAlone.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Error Stand Alone',\n    status: 'error',\n    variant: 'standalone',\n    emphasis: 'strong'\n  }\n}",...StrongErrorStandAlone.parameters?.docs?.source}}},StrongInfoStandAlone.parameters={...StrongInfoStandAlone.parameters,docs:{...StrongInfoStandAlone.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Info Stand Alone',\n    status: 'info',\n    variant: 'standalone',\n    emphasis: 'strong'\n  }\n}",...StrongInfoStandAlone.parameters?.docs?.source}}},StrongNotificationStandAlone.parameters={...StrongNotificationStandAlone.parameters,docs:{...StrongNotificationStandAlone.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Notification Stand Alone',\n    status: 'notification',\n    variant: 'standalone',\n    emphasis: 'strong'\n  }\n}",...StrongNotificationStandAlone.parameters?.docs?.source}}},StrongNeutralStandAlone.parameters={...StrongNeutralStandAlone.parameters,docs:{...StrongNeutralStandAlone.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Neutral Stand Alone',\n    status: 'neutral',\n    variant: 'standalone',\n    emphasis: 'strong'\n  }\n}",...StrongNeutralStandAlone.parameters?.docs?.source}}},StrongWarningStandAlone.parameters={...StrongWarningStandAlone.parameters,docs:{...StrongWarningStandAlone.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Warning Stand Alone',\n    status: 'warning',\n    variant: 'standalone',\n    emphasis: 'strong'\n  }\n}",...StrongWarningStandAlone.parameters?.docs?.source}}},StrongSuccessStandAlone.parameters={...StrongSuccessStandAlone.parameters,docs:{...StrongSuccessStandAlone.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Success Stand Alone',\n    status: 'success',\n    variant: 'standalone',\n    emphasis: 'strong'\n  }\n}",...StrongSuccessStandAlone.parameters?.docs?.source}}},SubtleErrorBanner.parameters={...SubtleErrorBanner.parameters,docs:{...SubtleErrorBanner.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Error Stand Alone',\n    status: 'error',\n    variant: 'banner',\n    emphasis: 'subtle'\n  }\n}",...SubtleErrorBanner.parameters?.docs?.source}}},SubtleInfoBanner.parameters={...SubtleInfoBanner.parameters,docs:{...SubtleInfoBanner.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Info Stand Alone',\n    status: 'info',\n    variant: 'banner',\n    emphasis: 'subtle'\n  }\n}",...SubtleInfoBanner.parameters?.docs?.source}}},SubtleNotificationBanner.parameters={...SubtleNotificationBanner.parameters,docs:{...SubtleNotificationBanner.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Notification Stand Alone',\n    status: 'notification',\n    variant: 'banner',\n    emphasis: 'subtle'\n  }\n}",...SubtleNotificationBanner.parameters?.docs?.source}}},SubtleNeutralBanner.parameters={...SubtleNeutralBanner.parameters,docs:{...SubtleNeutralBanner.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Neutral Stand Alone',\n    status: 'neutral',\n    variant: 'banner',\n    emphasis: 'subtle'\n  }\n}",...SubtleNeutralBanner.parameters?.docs?.source}}},SubtleWarningBanner.parameters={...SubtleWarningBanner.parameters,docs:{...SubtleWarningBanner.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Warning Stand Alone',\n    status: 'warning',\n    variant: 'banner',\n    emphasis: 'subtle'\n  }\n}",...SubtleWarningBanner.parameters?.docs?.source}}},SubtleSuccessBanner.parameters={...SubtleSuccessBanner.parameters,docs:{...SubtleSuccessBanner.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Success Stand Alone',\n    status: 'success',\n    variant: 'banner',\n    emphasis: 'subtle'\n  }\n}",...SubtleSuccessBanner.parameters?.docs?.source}}},StrongErrorBanner.parameters={...StrongErrorBanner.parameters,docs:{...StrongErrorBanner.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Error Stand Alone',\n    status: 'error',\n    variant: 'banner',\n    emphasis: 'strong'\n  }\n}",...StrongErrorBanner.parameters?.docs?.source}}},StrongInfoBanner.parameters={...StrongInfoBanner.parameters,docs:{...StrongInfoBanner.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Info Stand Alone',\n    status: 'info',\n    variant: 'banner',\n    emphasis: 'strong'\n  }\n}",...StrongInfoBanner.parameters?.docs?.source}}},StrongNotificationBanner.parameters={...StrongNotificationBanner.parameters,docs:{...StrongNotificationBanner.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Notification Stand Alone',\n    status: 'notification',\n    variant: 'banner',\n    emphasis: 'strong'\n  }\n}",...StrongNotificationBanner.parameters?.docs?.source}}},StrongNeutralBanner.parameters={...StrongNeutralBanner.parameters,docs:{...StrongNeutralBanner.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Neutral Stand Alone',\n    status: 'neutral',\n    variant: 'banner',\n    emphasis: 'strong'\n  }\n}",...StrongNeutralBanner.parameters?.docs?.source}}},StrongWarningBanner.parameters={...StrongWarningBanner.parameters,docs:{...StrongWarningBanner.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Warning Stand Alone',\n    status: 'warning',\n    variant: 'banner',\n    emphasis: 'strong'\n  }\n}",...StrongWarningBanner.parameters?.docs?.source}}},StrongSuccessBanner.parameters={...StrongSuccessBanner.parameters,docs:{...StrongSuccessBanner.parameters?.docs,source:{originalSource:"{\n  args: {\n    headerText: 'Success Stand Alone',\n    status: 'success',\n    variant: 'banner',\n    emphasis: 'strong'\n  }\n}",...StrongSuccessBanner.parameters?.docs?.source}}};const __namedExportsOrder=["Default","DefaultWithLink","DefaultNotDismissible","SubtleErrorStandAlone","SubtleInfoStandAlone","SubtleNotificationStandAlone","SubtleNeutralStandAlone","SubtleWarningStandAlone","SubtleSuccessStandAlone","StrongErrorStandAlone","StrongInfoStandAlone","StrongNotificationStandAlone","StrongNeutralStandAlone","StrongWarningStandAlone","StrongSuccessStandAlone","SubtleErrorBanner","SubtleInfoBanner","SubtleNotificationBanner","SubtleNeutralBanner","SubtleWarningBanner","SubtleSuccessBanner","StrongErrorBanner","StrongInfoBanner","StrongNotificationBanner","StrongNeutralBanner","StrongWarningBanner","StrongSuccessBanner"]},"./src/components/Button/Button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>Cre8Button});var _lit_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/@lit+react@1.0.7_@types+react@18.2.13/node_modules/@lit/react/index.js"),_cre8_dev_cre8_wc_lib_components_button_button__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/@cre8_dev+cre8-wc@1.0.3_webpack@5.98.0/node_modules/@cre8_dev/cre8-wc/lib/components/button/button.js"),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");const Cre8Button=(0,_lit_react__WEBPACK_IMPORTED_MODULE_0__.a)({react:react__WEBPACK_IMPORTED_MODULE_2__,tagName:"Cre8-button",elementClass:_cre8_dev_cre8_wc_lib_components_button_button__WEBPACK_IMPORTED_MODULE_1__.t});try{Cre8Button.displayName="Cre8Button",Cre8Button.__docgenInfo={description:"The size and state of buttons on the screen serve as visual cues for the user about what they can do and what they should do next. They indicate the availability and priority of the action on the page.\n\n- Buttons are a single call-to-action where a single click performs that action\n- Use buttons when you are performing an action which is almost always on the same page\n- Use a link instead of a button when you're navigating to another place\n\n## How to Use\n\nButtons are distinguished by three key properties:\n\n- **Visual Priority**: Style and size: Primary, Secondary, or Tertiary styles; each with large and small variations\n- **State**: Interaction state: hover/click (press), focus, disabled, and submitting/loading (only for large buttons)\n- **Brand**: Styles determined by the site or component theme\n\n### Usage Guidelines\n\nPrimary, Secondary and Tertiary styles emphasize or de-emphasize an action. They also define\nbackground, font style, and border colors. Large and small sizing assists with visual priority by defining button\nheights, left and right internal padding, and font-size.\n\n#### System Feedback\nEach button has a default and hover/click (press) state that give the user feedback\nthat they have successfully interacted with a button.\nButton presses should always be combined with other types of timely system feedback.\nExamples of system feedback may be a page refresh, exposing additional controls or content,\ndialogs, alerts and notifications.\nIf there is perceived a delay in system response, generally due to technical constraints,\nprovide a progress or loading indicator.\n\n#### Button Text\n\n- Button text should be as short and simple as possible, ideally a maximum of 3 words.\n- Use Title Case for readability.\n- They should not include punctuation (exception: \"Loading...\").\n- They should not be used as an indicator of what happens on the next page, or as a substitute\nfor a progress meter.\n\n#### Button With Icon\n\nFor button with icon:\n- **iconRotateDegree** & **iconFlipDirection** props are optional.\n- They are used to set up the correct dirrection for icons, for example,\narrows, caret up or caret down.\n\n#### Button Styling\n\n- DO use only the styles of the brand you are working on.\n- DO NOT combine styles, even if the page is co-branded.\n\n#### Button Sizes\n- DO always pair like sizes together and maintain the hierarchy of Primary and Secondary/Tertiary.\n- DO NOT mix sizes of buttons when they are used together as a group.\n\n#### Input Pairing\n\nPrimary and Secondary buttons may be paired with input fields.\nOnly one Primary button may appear on each screen.\nUse the Secondary button when there are multiple in-context buttons\nand/or when there is an emphasized page level button.\nWhen used in a form context, the button's `type` needs to be `submit` to pass along form data.\n\n- DO use only large buttons with input fields.\n- DO NOT use small buttons with input fields.",displayName:"Cre8Button",props:{size:{defaultValue:null,description:"Size variants add another way to increase or decrease visual priority of a button.\n- **sm** Shrinks the button typography and overall size from the default. Use when vertical space is constrained.\n- **md** This is the default value for the size.\n- **lg** Increases the button typography and overall size from the default.",name:"size",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"lg"'},{value:'"md"'}]}},rel:{defaultValue:null,description:"Rel if this is an <a> element - this swaps <button> for <a>",name:"rel",required:!1,type:{name:"string"}},text:{defaultValue:null,description:'The button text. Should be as short and simple as possible, ideally a maximum of 3 words.\n- Use Title Case for readability.\n- Should not include punctuation (exception: "Loading...").\n- Should not be used as an indicator of what happens on the next page, or as a substitute for a progress meter.',name:"text",required:!1,type:{name:"string"}},render:{defaultValue:null,description:"Example render, should not be used",name:"render",required:!1,type:{name:"() => TemplateResult<1>"}},variant:{defaultValue:null,description:"Style variant\n- **primary** renders the button used for primary actions. Presents highest visual priority.\n  When grouped with other buttons, only one primary is allowed\n- **secondary** renders a secondary button. Presents a lower visual priority\n- **tertiary** renders a tertiary button. Presents the lowest visual priority.\n  Should be used in limited amounts - consider if a link (`<a>`) would be more appropriate",name:"variant",required:!1,type:{name:"enum",value:[{value:'"secondary"'},{value:'"tertiary"'},{value:'"primary"'}]}},componentClassNames:{defaultValue:null,description:"Abstraction of `classnames` that automatically includes any style modifier\nas well as any set variants.\n\nIt is expected that `variant` would be overridden in a subclass with more\nspecific types, `@property() variant?: 'foo' | 'bar'`\n@param baseClassName",name:"componentClassNames",required:!1,type:{name:"(baseClassName: string, additionalClassNames?: {}) => string"}},slotEmpty:{defaultValue:null,description:"Check if a slot is empty\n@param slotName",name:"slotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},slotNotEmpty:{defaultValue:null,description:"Check if a slot is not empty\n@param slotName",name:"slotNotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},dispatch:{defaultValue:null,description:"Dispatch a custom event.",name:"dispatch",required:!1,type:{name:"({ e, eventName, detailObj, optionsObj, }: Cre8DispatchProps) => CustomEvent<any>"}},renderOptions:{defaultValue:null,description:"@category rendering",name:"renderOptions",required:!1,type:{name:"RenderOptions"}},connectedCallback:{defaultValue:null,description:"Invoked when the component is added to the document's DOM.\n\nIn `connectedCallback()` you should setup tasks that should only occur when\nthe element is connected to the document. The most common of these is\nadding event listeners to nodes external to the element, like a keydown\nevent handler added to the window.\n\n```ts\nconnectedCallback() {\n  super.connectedCallback();\n  addEventListener('keydown', this._handleKeydown);\n}\n```\n\nTypically, anything done in `connectedCallback()` should be undone when the\nelement is disconnected, in `disconnectedCallback()`.\n@category lifecycle",name:"connectedCallback",required:!1,type:{name:"() => void"}},disconnectedCallback:{defaultValue:null,description:"Invoked when the component is removed from the document's DOM.\n\nThis callback is the main signal to the element that it may no longer be\nused. `disconnectedCallback()` should ensure that nothing is holding a\nreference to the element (such as event listeners added to nodes external\nto the element), so that it is free to be garbage collected.\n\n```ts\ndisconnectedCallback() {\n  super.disconnectedCallback();\n  window.removeEventListener('keydown', this._handleKeydown);\n}\n```\n\nAn element may be re-connected after being disconnected.\n@category lifecycle",name:"disconnectedCallback",required:!1,type:{name:"() => void"}},renderRoot:{defaultValue:null,description:"Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot.\n@category rendering",name:"renderRoot",required:!1,type:{name:"HTMLElement | ShadowRoot"}},isUpdatePending:{defaultValue:null,description:"True if there is a pending update as a result of calling `requestUpdate()`.\nShould only be read.\n@category updates",name:"isUpdatePending",required:!1,type:{name:"boolean"}},hasUpdated:{defaultValue:null,description:"Is set to `true` after the first update. The element code cannot assume\nthat `renderRoot` exists before the element `hasUpdated`.\n@category updates",name:"hasUpdated",required:!1,type:{name:"boolean"}},addController:{defaultValue:null,description:"Registers a `ReactiveController` to participate in the element's reactive\nupdate cycle. The element automatically calls into any registered\ncontrollers during its lifecycle callbacks.\n\nIf the element is connected when `addController()` is called, the\ncontroller's `hostConnected()` callback will be immediately called.\n@category controllers",name:"addController",required:!1,type:{name:"(controller: ReactiveController) => void"}},removeController:{defaultValue:null,description:"Removes a `ReactiveController` from the element.\n@category controllers",name:"removeController",required:!1,type:{name:"(controller: ReactiveController) => void"}},attributeChangedCallback:{defaultValue:null,description:"Synchronizes property values when attributes change.\n\nSpecifically, when an attribute is set, the corresponding property is set.\nYou should rarely need to implement this callback. If this method is\noverridden, `super.attributeChangedCallback(name, _old, value)` must be\ncalled.\n\nSee [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\non MDN for more information about the `attributeChangedCallback`.\n@category attributes",name:"attributeChangedCallback",required:!1,type:{name:"(name: string, _old: string, value: string) => void"}},requestUpdate:{defaultValue:null,description:"Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored.\n@param name name of requesting property\n@param oldValue old value of requesting property\n@param options property options to use instead of the previously\nconfigured options\n@category updates",name:"requestUpdate",required:!1,type:{name:"(name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration<unknown, unknown>) => void"}},updateComplete:{defaultValue:null,description:"Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.\n\nTo await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n@return A promise of a boolean that resolves to true if the update completed\nwithout triggering another update.\n@category updates",name:"updateComplete",required:!1,type:{name:"Promise<boolean>"}},svg:{defaultValue:null,description:"svg as a raw string\n- For button with icon, the icon is defined by this prop.\n- Pass in a raw svg as a String for using <cre8-icon>\n- Must include the icon's position with `iconPostion`.",name:"svg",required:!1,type:{name:"string"}},iconRotateDegree:{defaultValue:null,description:"iconRotateDegree is used for <cre8-icon> to set the arrow in the correct direction",name:"iconRotateDegree",required:!1,type:{name:"number"}},iconFlipDirection:{defaultValue:null,description:"iconFlipDirection is used for <cre8-icon> to set the icon in the correct direction",name:"iconFlipDirection",required:!1,type:{name:"string"}},type:{defaultValue:null,description:"Type of button.\n- **button** (default) button has no default behavior and does nothing unless provided some sort\nof client-side trigger\n- **submit** button for submitting form data to a server",name:"type",required:!1,type:{name:"enum",value:[{value:'"button"'},{value:'"submit"'},{value:'"reset"'}]}},href:{defaultValue:null,description:"Provide this property if you intend to use button styles for an anchor tag (`<a>`).\nThis changes the component markup from `<button>` usage to `<a>` instead.",name:"href",required:!1,type:{name:"string"}},fullWidth:{defaultValue:null,description:"Full width button\n@attr {boolean}",name:"fullWidth",required:!1,type:{name:"boolean"}},field:{defaultValue:null,description:"",name:"field",required:!1,type:{name:"HTMLButtonElement"}},formResetCallback:{defaultValue:null,description:"",name:"formResetCallback",required:!1,type:{name:"() => void"}},internals:{defaultValue:null,description:"@protected\n@internal An instance of element internals.\nContains properties and methods that allows the element\nto participate fully in the HTML form it's in.",name:"internals",required:!1,type:{name:"Cre8ElementInternals"}},internalValue:{defaultValue:null,description:"@protected\n@internal Stores the value for the `value` getter and setter.",name:"internalValue",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"The value of the form field.\nSets the value of the form field.\n1. Stores the new value so it can be retrieved by the getter.\n2. Sets the current value of the control.\n3. Updates the actual field.\n4. Rerenders the component.",name:"value",required:!1,type:{name:"string"}},neutral:{defaultValue:null,description:"This property is for a neutral button propery mainly used for the secondary or tertiary button variant.\n@attr {boolean)",name:"neutral",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Disabled attribute\n@attr {boolean}\n\n**NOTE**: Disabled states are used to indicate that an action is temporarily unavailable.\nIn general, using disabled states is NOT advised. It should be clear to the user what actions they must\ntake to activate the button. Real-time, field-level validation can help provide clarity.",name:"disabled",required:!1,type:{name:"boolean"}},inverse:{defaultValue:null,description:"Inverse attribute\n@attr {boolean}\n\nThe inverse prop allows the button to work on either a light or dark surface.",name:"inverse",required:!1,type:{name:"boolean"}},target:{defaultValue:null,description:"Target attribute for a link if providing `href` to style a link as a button\n- **_blank** yields a link that opens in a new tab\n- **_self** yields a link that loads the URL into the same browsing context as the current one.\n  This is the default behavior\n- **_parent** yields a link that loads the URL into the parent browsing context of the current one.\n  If there is no parent, this behaves the same way as _self\n- **_top** yields a link that loads the URL into the top-level browsing context.\n  If there is no parent, this behaves the same way as _self.",name:"target",required:!1,type:{name:"enum",value:[{value:'"_blank"'},{value:'"_self"'},{value:'"_parent"'},{value:'"_top"'}]}},iconName:{defaultValue:null,description:"Deprecated: iconName, use svg instead\nIcon name if including an icon within a button.\nMust include the icon's position with `iconPostion`. This prop is used for <cre8-icon-legacy>\n@deprecated",name:"iconName",required:!1,type:{name:"string"}},iconPosition:{defaultValue:null,description:"Icon position. Must include the name of the icon with `iconName`\n\n- **before** places the icon before the button text\n- **after** places the icon after the button text",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"after"'},{value:'"before"'}]}},hideText:{defaultValue:null,description:"Visually hide button text. Text is still accessible to assistive technology.\nUse this for icon-only buttons for accessibility",name:"hideText",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"* Changes styling to an active state with a spinning icon.\n* Adds accessibility treatment by:\n  * announcing via voiceover when the loading success/error state via a aria-live region\n  * setting `aria-disabled`\n* Disables click events / form submitting while allowing focus (for accessibility)\n@attr {boolean}",name:"loading",required:!1,type:{name:"boolean"}},loadingComplete:{defaultValue:null,description:"* Variant of the loading button that:\n  * Removes loading spinner\n  * Informs the SR user that the loading status is now complete, with visually hidden text in the live area\n@attr {boolean}",name:"loadingComplete",required:!1,type:{name:"boolean"}},buttonAriaExpanded:{defaultValue:null,description:"Button aria expanded attribute",name:"buttonAriaExpanded",required:!1,type:{name:"boolean"}},formSubmit:{defaultValue:null,description:"",name:"formSubmit",required:!1,type:{name:"() => void"}},formReset:{defaultValue:null,description:"",name:"formReset",required:!1,type:{name:"() => void"}},splitButtonType:{defaultValue:null,description:"These two subvariants of the split button style the two seperate buttons to style as a singular button",name:"splitButtonType",required:!1,type:{name:"enum",value:[{value:'"text"'},{value:'"caret"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.tsx#Cre8Button"]={docgenInfo:Cre8Button.__docgenInfo,name:"Cre8Button",path:"src/components/Button/Button.tsx#Cre8Button"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Link/Link.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{L:()=>Cre8Link});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),_lit_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/@lit+react@1.0.7_@types+react@18.2.13/node_modules/@lit/react/index.js"),_cre8_dev_cre8_wc_lib_components_link_link__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/@cre8_dev+cre8-wc@1.0.3_webpack@5.98.0/node_modules/@cre8_dev/cre8-wc/lib/components/link/link.js");const Cre8Link=(0,_lit_react__WEBPACK_IMPORTED_MODULE_1__.a)({react:react__WEBPACK_IMPORTED_MODULE_0__,tagName:"Cre8-link",elementClass:_cre8_dev_cre8_wc_lib_components_link_link__WEBPACK_IMPORTED_MODULE_2__.L});try{Cre8Link.displayName="Cre8Link",Cre8Link.__docgenInfo={description:"Link Component are strictly used in the case where the component will take\nthe user away from the current page to a new url.\nIn this vein, this component should ONLY be used in situations an anchor tag would be used (an href is required)\nThis goes for the variations as well such as the Call To Action Link\n\n**Note**\n\nFor link with icon:\n- **iconRotateDegree** & **iconFlipDirection** props are optional.\n- They are used to set up the correct dirrection for icons, for example,\narrows, caret up or caret down.",displayName:"Cre8Link",props:{size:{defaultValue:null,description:"Size variant (default is medium)\n- **sm** shrinks the link typography and overall size\n- **lg** increases the link typography size and overall size",name:"size",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"lg"'}]}},rel:{defaultValue:null,description:"Rel attribute of the anchor tag",name:"rel",required:!1,type:{name:"string"}},render:{defaultValue:null,description:"Example render, should not be used",name:"render",required:!1,type:{name:"() => TemplateResult<1>"}},componentClassNames:{defaultValue:null,description:"Abstraction of `classnames` that automatically includes any style modifier\nas well as any set variants.\n\nIt is expected that `variant` would be overridden in a subclass with more\nspecific types, `@property() variant?: 'foo' | 'bar'`\n@param baseClassName",name:"componentClassNames",required:!1,type:{name:"(baseClassName: string, additionalClassNames?: {}) => string"}},slotEmpty:{defaultValue:null,description:"Check if a slot is empty\n@param slotName",name:"slotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},slotNotEmpty:{defaultValue:null,description:"Check if a slot is not empty\n@param slotName",name:"slotNotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},dispatch:{defaultValue:null,description:"Dispatch a custom event.",name:"dispatch",required:!1,type:{name:"({ e, eventName, detailObj, optionsObj, }: Cre8DispatchProps) => CustomEvent<any>"}},renderOptions:{defaultValue:null,description:"@category rendering",name:"renderOptions",required:!1,type:{name:"RenderOptions"}},connectedCallback:{defaultValue:null,description:"Invoked when the component is added to the document's DOM.\n\nIn `connectedCallback()` you should setup tasks that should only occur when\nthe element is connected to the document. The most common of these is\nadding event listeners to nodes external to the element, like a keydown\nevent handler added to the window.\n\n```ts\nconnectedCallback() {\n  super.connectedCallback();\n  addEventListener('keydown', this._handleKeydown);\n}\n```\n\nTypically, anything done in `connectedCallback()` should be undone when the\nelement is disconnected, in `disconnectedCallback()`.\n@category lifecycle",name:"connectedCallback",required:!1,type:{name:"() => void"}},disconnectedCallback:{defaultValue:null,description:"Invoked when the component is removed from the document's DOM.\n\nThis callback is the main signal to the element that it may no longer be\nused. `disconnectedCallback()` should ensure that nothing is holding a\nreference to the element (such as event listeners added to nodes external\nto the element), so that it is free to be garbage collected.\n\n```ts\ndisconnectedCallback() {\n  super.disconnectedCallback();\n  window.removeEventListener('keydown', this._handleKeydown);\n}\n```\n\nAn element may be re-connected after being disconnected.\n@category lifecycle",name:"disconnectedCallback",required:!1,type:{name:"() => void"}},renderRoot:{defaultValue:null,description:"Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot.\n@category rendering",name:"renderRoot",required:!1,type:{name:"HTMLElement | ShadowRoot"}},isUpdatePending:{defaultValue:null,description:"True if there is a pending update as a result of calling `requestUpdate()`.\nShould only be read.\n@category updates",name:"isUpdatePending",required:!1,type:{name:"boolean"}},hasUpdated:{defaultValue:null,description:"Is set to `true` after the first update. The element code cannot assume\nthat `renderRoot` exists before the element `hasUpdated`.\n@category updates",name:"hasUpdated",required:!1,type:{name:"boolean"}},addController:{defaultValue:null,description:"Registers a `ReactiveController` to participate in the element's reactive\nupdate cycle. The element automatically calls into any registered\ncontrollers during its lifecycle callbacks.\n\nIf the element is connected when `addController()` is called, the\ncontroller's `hostConnected()` callback will be immediately called.\n@category controllers",name:"addController",required:!1,type:{name:"(controller: ReactiveController) => void"}},removeController:{defaultValue:null,description:"Removes a `ReactiveController` from the element.\n@category controllers",name:"removeController",required:!1,type:{name:"(controller: ReactiveController) => void"}},attributeChangedCallback:{defaultValue:null,description:"Synchronizes property values when attributes change.\n\nSpecifically, when an attribute is set, the corresponding property is set.\nYou should rarely need to implement this callback. If this method is\noverridden, `super.attributeChangedCallback(name, _old, value)` must be\ncalled.\n\nSee [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\non MDN for more information about the `attributeChangedCallback`.\n@category attributes",name:"attributeChangedCallback",required:!1,type:{name:"(name: string, _old: string, value: string) => void"}},requestUpdate:{defaultValue:null,description:"Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored.\n@param name name of requesting property\n@param oldValue old value of requesting property\n@param options property options to use instead of the previously\nconfigured options\n@category updates",name:"requestUpdate",required:!1,type:{name:"(name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration<unknown, unknown>) => void"}},updateComplete:{defaultValue:null,description:"Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.\n\nTo await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n@return A promise of a boolean that resolves to true if the update completed\nwithout triggering another update.\n@category updates",name:"updateComplete",required:!1,type:{name:"Promise<boolean>"}},inverted:{defaultValue:null,description:"Inverted colors Link (onDark)",name:"inverted",required:!1,type:{name:"boolean"}},svg:{defaultValue:null,description:"svg as a raw string\n- For links with icon, the icon is defined by this prop.\n- Pass in a raw svg as a String for using <cre8-icon>",name:"svg",required:!1,type:{name:"string"}},iconRotateDegree:{defaultValue:null,description:"iconRotateDegree is used for <cre8-icon> to set the arrow in the correct direction",name:"iconRotateDegree",required:!1,type:{name:"number"}},iconFlipDirection:{defaultValue:null,description:"iconFlipDirection is used for <cre8-icon> to set the icon in the correct direction",name:"iconFlipDirection",required:!1,type:{name:"string"}},href:{defaultValue:null,description:"Href attribute of the anchor tag",name:"href",required:!1,type:{name:"string"}},target:{defaultValue:null,description:"Target attribute for a link (i.e. set to _blank to open in new tab)\n- **_blank** yields a link that opens in a new tab\n- **_self** yields a link that loads the URL into the same browsing context as the current one.\n  This is the default behavior\n- **_parent** yields a link that loads the URL into the parent browsing context of the current one.\n  If there is no parent, this behaves the same way as _self\n- **_top** yields a link that loads the URL into the top-level browsing context.\n  If there is no parent, this behaves the same way as _self.",name:"target",required:!1,type:{name:"enum",value:[{value:'"_blank"'},{value:'"_self"'},{value:'"_parent"'},{value:'"_top"'}]}},iconName:{defaultValue:null,description:"DEPRECATED: Icon name, use svg instead\n@deprecated",name:"iconName",required:!1,type:{name:"string"}},iconPosition:{defaultValue:null,description:"Icon position\n- **before** places the icon before the button text\n- **after** places the icon after the button text",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"after"'},{value:'"before"'}]}},ctaIcon:{defaultValue:null,description:"Call To Action Icon",name:"ctaIcon",required:!1,type:{name:"string"}},ctaLink:{defaultValue:null,description:"Call To Action Link",name:"ctaLink",required:!1,type:{name:"boolean"}},noUnderline:{defaultValue:null,description:"Link with no underline",name:"noUnderline",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Link/Link.tsx#Cre8Link"]={docgenInfo:Cre8Link.__docgenInfo,name:"Cre8Link",path:"src/components/Link/Link.tsx#Cre8Link"})}catch(__react_docgen_typescript_loader_error){}}}]);