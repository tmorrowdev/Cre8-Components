"use strict";(self.webpackChunk_cre8_dev_cre8_react=self.webpackChunk_cre8_dev_cre8_react||[]).push([[2925],{"./src/components/Link/Link.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{L:()=>Cre8Link});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),_lit_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/@lit+react@1.0.7_@types+react@18.2.13/node_modules/@lit/react/index.js"),_cre8_dev_cre8_wc_lib_components_link_link__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/@cre8_dev+cre8-wc@1.0.3_webpack@5.98.0/node_modules/@cre8_dev/cre8-wc/lib/components/link/link.js");const Cre8Link=(0,_lit_react__WEBPACK_IMPORTED_MODULE_1__.a)({react:react__WEBPACK_IMPORTED_MODULE_0__,tagName:"Cre8-link",elementClass:_cre8_dev_cre8_wc_lib_components_link_link__WEBPACK_IMPORTED_MODULE_2__.L});try{Cre8Link.displayName="Cre8Link",Cre8Link.__docgenInfo={description:"Link Component are strictly used in the case where the component will take\nthe user away from the current page to a new url.\nIn this vein, this component should ONLY be used in situations an anchor tag would be used (an href is required)\nThis goes for the variations as well such as the Call To Action Link\n\n**Note**\n\nFor link with icon:\n- **iconRotateDegree** & **iconFlipDirection** props are optional.\n- They are used to set up the correct dirrection for icons, for example,\narrows, caret up or caret down.",displayName:"Cre8Link",props:{size:{defaultValue:null,description:"Size variant (default is medium)\n- **sm** shrinks the link typography and overall size\n- **lg** increases the link typography size and overall size",name:"size",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"lg"'}]}},rel:{defaultValue:null,description:"Rel attribute of the anchor tag",name:"rel",required:!1,type:{name:"string"}},render:{defaultValue:null,description:"Example render, should not be used",name:"render",required:!1,type:{name:"() => TemplateResult<1>"}},componentClassNames:{defaultValue:null,description:"Abstraction of `classnames` that automatically includes any style modifier\nas well as any set variants.\n\nIt is expected that `variant` would be overridden in a subclass with more\nspecific types, `@property() variant?: 'foo' | 'bar'`\n@param baseClassName",name:"componentClassNames",required:!1,type:{name:"(baseClassName: string, additionalClassNames?: {}) => string"}},slotEmpty:{defaultValue:null,description:"Check if a slot is empty\n@param slotName",name:"slotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},slotNotEmpty:{defaultValue:null,description:"Check if a slot is not empty\n@param slotName",name:"slotNotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},dispatch:{defaultValue:null,description:"Dispatch a custom event.",name:"dispatch",required:!1,type:{name:"({ e, eventName, detailObj, optionsObj, }: Cre8DispatchProps) => CustomEvent<any>"}},renderOptions:{defaultValue:null,description:"@category rendering",name:"renderOptions",required:!1,type:{name:"RenderOptions"}},connectedCallback:{defaultValue:null,description:"Invoked when the component is added to the document's DOM.\n\nIn `connectedCallback()` you should setup tasks that should only occur when\nthe element is connected to the document. The most common of these is\nadding event listeners to nodes external to the element, like a keydown\nevent handler added to the window.\n\n```ts\nconnectedCallback() {\n  super.connectedCallback();\n  addEventListener('keydown', this._handleKeydown);\n}\n```\n\nTypically, anything done in `connectedCallback()` should be undone when the\nelement is disconnected, in `disconnectedCallback()`.\n@category lifecycle",name:"connectedCallback",required:!1,type:{name:"() => void"}},disconnectedCallback:{defaultValue:null,description:"Invoked when the component is removed from the document's DOM.\n\nThis callback is the main signal to the element that it may no longer be\nused. `disconnectedCallback()` should ensure that nothing is holding a\nreference to the element (such as event listeners added to nodes external\nto the element), so that it is free to be garbage collected.\n\n```ts\ndisconnectedCallback() {\n  super.disconnectedCallback();\n  window.removeEventListener('keydown', this._handleKeydown);\n}\n```\n\nAn element may be re-connected after being disconnected.\n@category lifecycle",name:"disconnectedCallback",required:!1,type:{name:"() => void"}},renderRoot:{defaultValue:null,description:"Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot.\n@category rendering",name:"renderRoot",required:!1,type:{name:"HTMLElement | ShadowRoot"}},isUpdatePending:{defaultValue:null,description:"True if there is a pending update as a result of calling `requestUpdate()`.\nShould only be read.\n@category updates",name:"isUpdatePending",required:!1,type:{name:"boolean"}},hasUpdated:{defaultValue:null,description:"Is set to `true` after the first update. The element code cannot assume\nthat `renderRoot` exists before the element `hasUpdated`.\n@category updates",name:"hasUpdated",required:!1,type:{name:"boolean"}},addController:{defaultValue:null,description:"Registers a `ReactiveController` to participate in the element's reactive\nupdate cycle. The element automatically calls into any registered\ncontrollers during its lifecycle callbacks.\n\nIf the element is connected when `addController()` is called, the\ncontroller's `hostConnected()` callback will be immediately called.\n@category controllers",name:"addController",required:!1,type:{name:"(controller: ReactiveController) => void"}},removeController:{defaultValue:null,description:"Removes a `ReactiveController` from the element.\n@category controllers",name:"removeController",required:!1,type:{name:"(controller: ReactiveController) => void"}},attributeChangedCallback:{defaultValue:null,description:"Synchronizes property values when attributes change.\n\nSpecifically, when an attribute is set, the corresponding property is set.\nYou should rarely need to implement this callback. If this method is\noverridden, `super.attributeChangedCallback(name, _old, value)` must be\ncalled.\n\nSee [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\non MDN for more information about the `attributeChangedCallback`.\n@category attributes",name:"attributeChangedCallback",required:!1,type:{name:"(name: string, _old: string, value: string) => void"}},requestUpdate:{defaultValue:null,description:"Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored.\n@param name name of requesting property\n@param oldValue old value of requesting property\n@param options property options to use instead of the previously\nconfigured options\n@category updates",name:"requestUpdate",required:!1,type:{name:"(name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration<unknown, unknown>) => void"}},updateComplete:{defaultValue:null,description:"Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.\n\nTo await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n@return A promise of a boolean that resolves to true if the update completed\nwithout triggering another update.\n@category updates",name:"updateComplete",required:!1,type:{name:"Promise<boolean>"}},inverted:{defaultValue:null,description:"Inverted colors Link (onDark)",name:"inverted",required:!1,type:{name:"boolean"}},svg:{defaultValue:null,description:"svg as a raw string\n- For links with icon, the icon is defined by this prop.\n- Pass in a raw svg as a String for using <cre8-icon>",name:"svg",required:!1,type:{name:"string"}},iconRotateDegree:{defaultValue:null,description:"iconRotateDegree is used for <cre8-icon> to set the arrow in the correct direction",name:"iconRotateDegree",required:!1,type:{name:"number"}},iconFlipDirection:{defaultValue:null,description:"iconFlipDirection is used for <cre8-icon> to set the icon in the correct direction",name:"iconFlipDirection",required:!1,type:{name:"string"}},href:{defaultValue:null,description:"Href attribute of the anchor tag",name:"href",required:!1,type:{name:"string"}},target:{defaultValue:null,description:"Target attribute for a link (i.e. set to _blank to open in new tab)\n- **_blank** yields a link that opens in a new tab\n- **_self** yields a link that loads the URL into the same browsing context as the current one.\n  This is the default behavior\n- **_parent** yields a link that loads the URL into the parent browsing context of the current one.\n  If there is no parent, this behaves the same way as _self\n- **_top** yields a link that loads the URL into the top-level browsing context.\n  If there is no parent, this behaves the same way as _self.",name:"target",required:!1,type:{name:"enum",value:[{value:'"_blank"'},{value:'"_self"'},{value:'"_parent"'},{value:'"_top"'}]}},iconName:{defaultValue:null,description:"DEPRECATED: Icon name, use svg instead\n@deprecated",name:"iconName",required:!1,type:{name:"string"}},iconPosition:{defaultValue:null,description:"Icon position\n- **before** places the icon before the button text\n- **after** places the icon after the button text",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"after"'},{value:'"before"'}]}},ctaIcon:{defaultValue:null,description:"Call To Action Icon",name:"ctaIcon",required:!1,type:{name:"string"}},ctaLink:{defaultValue:null,description:"Call To Action Link",name:"ctaLink",required:!1,type:{name:"boolean"}},noUnderline:{defaultValue:null,description:"Link with no underline",name:"noUnderline",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Link/Link.tsx#Cre8Link"]={docgenInfo:Cre8Link.__docgenInfo,name:"Cre8Link",path:"src/components/Link/Link.tsx#Cre8Link"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Select/Select.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,Error:()=>Error,FieldNote:()=>FieldNote,FieldNoteAndSuccess:()=>FieldNoteAndSuccess,FieldnoteAndError:()=>FieldnoteAndError,OptionGroup:()=>OptionGroup,Preselected:()=>Preselected,Success:()=>Success,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Select_stories});var react=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),decorator=__webpack_require__("../../node_modules/.pnpm/@storybook+addon-actions@7.6.20/node_modules/@storybook/addon-actions/dist/decorator.mjs"),_lit_react=__webpack_require__("./node_modules/.pnpm/@lit+react@1.0.7_@types+react@18.2.13/node_modules/@lit/react/index.js"),select_select=__webpack_require__("./node_modules/.pnpm/@cre8_dev+cre8-wc@1.0.3_webpack@5.98.0/node_modules/@cre8_dev/cre8-wc/lib/components/select/select.js");const Cre8Select=(0,_lit_react.a)({react,tagName:"Cre8-select",elementClass:select_select.F,events:{onChange:"change"}});try{Cre8Select.displayName="Cre8Select",Cre8Select.__docgenInfo={description:"The Select control is designed and built to be used for selecting between choices in a form.\nIt is not a Dropdown control which is generally used for displaying lists of choices\nthat act as links or actions, like filter options.\n\nConsider the use of a Select control carefully.\nWhen you have less than 5 options for the user to choose from,\nRadio or Checkbox inputs may be a better choice to display all of the options at once.\nUsers have to slow down to scan a list with more than 15 options,\nso using an option group to give the options hierarchy may help users find their choice faster.\nAlternately, a text input field might be a more appropriate control to use when there are too many options,\nespecially when used with typeahead/auto-complete.\n\n## How to use\n1. The collapsed default state always shows a default placeholder value or a selected value.\n2. Sort list items in a logical order, such as grouping highly related options together, placing most common options first, using alphabetical or numeric orders or dates in chronological order.\n3. A list that includes 6+ items should show a scrollbar.\n4. Users should be able to use a keystroke to quickly jump to selecting an option that begins with the entered letter.\n5. Utilize appropriate native controls for when a user is on a mobile device rather than our custom Select.\n6. Adhere to our common form field conventions and always include a Label, provide short and clear error messages in context, avoid using the Read-only and Disabled states as much as possible, and utilize the info/formatting tip or helpful link rather than placeholder text.",displayName:"Cre8Select",props:{onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(e: Cre8DomEvent<Cre8Select, Cre8Select>) => void"}},render:{defaultValue:null,description:"Example render, should not be used",name:"render",required:!1,type:{name:"() => TemplateResult<1>"}},name:{defaultValue:null,description:"The name property on the select\n@attr {string}",name:"name",required:!1,type:{name:"string"}},componentClassNames:{defaultValue:null,description:"Abstraction of `classnames` that automatically includes any style modifier\nas well as any set variants.\n\nIt is expected that `variant` would be overridden in a subclass with more\nspecific types, `@property() variant?: 'foo' | 'bar'`\n@param baseClassName",name:"componentClassNames",required:!1,type:{name:"(baseClassName: string, additionalClassNames?: {}) => string"}},slotEmpty:{defaultValue:null,description:"Check if a slot is empty\n@param slotName",name:"slotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},slotNotEmpty:{defaultValue:null,description:"Check if a slot is not empty\n@param slotName",name:"slotNotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},dispatch:{defaultValue:null,description:"Dispatch a custom event.",name:"dispatch",required:!1,type:{name:"({ e, eventName, detailObj, optionsObj, }: Cre8DispatchProps) => CustomEvent<any>"}},renderOptions:{defaultValue:null,description:"@category rendering",name:"renderOptions",required:!1,type:{name:"RenderOptions"}},connectedCallback:{defaultValue:null,description:"Invoked when the component is added to the document's DOM.\n\nIn `connectedCallback()` you should setup tasks that should only occur when\nthe element is connected to the document. The most common of these is\nadding event listeners to nodes external to the element, like a keydown\nevent handler added to the window.\n\n```ts\nconnectedCallback() {\n  super.connectedCallback();\n  addEventListener('keydown', this._handleKeydown);\n}\n```\n\nTypically, anything done in `connectedCallback()` should be undone when the\nelement is disconnected, in `disconnectedCallback()`.\n@category lifecycle",name:"connectedCallback",required:!1,type:{name:"() => void"}},disconnectedCallback:{defaultValue:null,description:"Invoked when the component is removed from the document's DOM.\n\nThis callback is the main signal to the element that it may no longer be\nused. `disconnectedCallback()` should ensure that nothing is holding a\nreference to the element (such as event listeners added to nodes external\nto the element), so that it is free to be garbage collected.\n\n```ts\ndisconnectedCallback() {\n  super.disconnectedCallback();\n  window.removeEventListener('keydown', this._handleKeydown);\n}\n```\n\nAn element may be re-connected after being disconnected.\n@category lifecycle",name:"disconnectedCallback",required:!1,type:{name:"() => void"}},renderRoot:{defaultValue:null,description:"Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot.\n@category rendering",name:"renderRoot",required:!1,type:{name:"HTMLElement | ShadowRoot"}},isUpdatePending:{defaultValue:null,description:"True if there is a pending update as a result of calling `requestUpdate()`.\nShould only be read.\n@category updates",name:"isUpdatePending",required:!1,type:{name:"boolean"}},hasUpdated:{defaultValue:null,description:"Is set to `true` after the first update. The element code cannot assume\nthat `renderRoot` exists before the element `hasUpdated`.\n@category updates",name:"hasUpdated",required:!1,type:{name:"boolean"}},addController:{defaultValue:null,description:"Registers a `ReactiveController` to participate in the element's reactive\nupdate cycle. The element automatically calls into any registered\ncontrollers during its lifecycle callbacks.\n\nIf the element is connected when `addController()` is called, the\ncontroller's `hostConnected()` callback will be immediately called.\n@category controllers",name:"addController",required:!1,type:{name:"(controller: ReactiveController) => void"}},removeController:{defaultValue:null,description:"Removes a `ReactiveController` from the element.\n@category controllers",name:"removeController",required:!1,type:{name:"(controller: ReactiveController) => void"}},attributeChangedCallback:{defaultValue:null,description:"Synchronizes property values when attributes change.\n\nSpecifically, when an attribute is set, the corresponding property is set.\nYou should rarely need to implement this callback. If this method is\noverridden, `super.attributeChangedCallback(name, _old, value)` must be\ncalled.\n\nSee [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\non MDN for more information about the `attributeChangedCallback`.\n@category attributes",name:"attributeChangedCallback",required:!1,type:{name:"(name: string, _old: string, value: string) => void"}},requestUpdate:{defaultValue:null,description:"Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored.\n@param name name of requesting property\n@param oldValue old value of requesting property\n@param options property options to use instead of the previously\nconfigured options\n@category updates",name:"requestUpdate",required:!1,type:{name:"(name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration<unknown, unknown>) => void"}},updateComplete:{defaultValue:null,description:"Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.\n\nTo await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n@return A promise of a boolean that resolves to true if the update completed\nwithout triggering another update.\n@category updates",name:"updateComplete",required:!1,type:{name:"Promise<boolean>"}},label:{defaultValue:null,description:"The required label that appears above the select\n@attr {string}",name:"label",required:!1,type:{name:"string"}},firstUpdated:{defaultValue:null,description:"First updatedLifecycle\n1) Get the option in the items array with selected set to true. Set that as the selected item\n2) The default value is set to the `option` with the `selected` if one exists. Otherwise, use the\nselect the first item value like the native select.",name:"firstUpdated",required:!1,type:{name:"() => void"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:'"select"'}},fieldId:{defaultValue:null,description:"The unique id of the select\n@attr {string}",name:"fieldId",required:!1,type:{name:"string"}},field:{defaultValue:null,description:"Select input querySelector",name:"field",required:!1,type:{name:"HTMLSelectElement"}},formResetCallback:{defaultValue:null,description:"",name:"formResetCallback",required:!1,type:{name:"() => void"}},internals:{defaultValue:null,description:"@protected\n@internal An instance of element internals.\nContains properties and methods that allows the element\nto participate fully in the HTML form it's in.",name:"internals",required:!1,type:{name:"Cre8ElementInternals"}},internalValue:{defaultValue:null,description:"@protected\n@internal Stores the value for the `value` getter and setter.",name:"internalValue",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"The value of the form field.\nSets the value of the form field.\n1. Stores the new value so it can be retrieved by the getter.\n2. Sets the current value of the control.\n3. Updates the actual field.\n4. Rerenders the component.",name:"value",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"The disabled attribute on the select\n@attr {boolean}",name:"disabled",required:!1,type:{name:"boolean"}},fieldNote:{defaultValue:null,description:"Optional field note text can be added to provide additional field guidance.\n@attr {string}",name:"fieldNote",required:!1,type:{name:"string"}},ariaDescribedBy:{defaultValue:null,description:"Used to connect the field note in text field to the text menu for accessibility\n@attr {string}",name:"ariaDescribedBy",required:!1,type:{name:"string"}},isError:{defaultValue:null,description:"Changes the component's treatment to represent an error state\n@attr {boolean}",name:"isError",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"The required attribute on the select\n@attr {boolean}",name:"required",required:!1,type:{name:"boolean"}},isSuccess:{defaultValue:null,description:"Changes the component's treatment to represent a success state\n@attr {boolean}",name:"isSuccess",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"A mix of Cre8SelectOption and Cre8SelectOptionGroup definitions:\n- Cre8SelectOption\n  - label: option label text - `string`\n  - value: option value - `number | string`\n- Cre8SelectOptionGroup\n - optGroupLabel: optgroup label text - `string`\n - options: Array of multiple Cre8SelectOption items - `Cre8SelectOption[]`",name:"items",required:!1,type:{name:"(Cre8SelectOption | Cre8SelectOptionGroup)[]"}},validationAriaDescribedBy:{defaultValue:null,description:"Additional aria-describedby connection to id for additional success and error notes to be accessible\n@attr {string}",name:"validationAriaDescribedBy",required:!1,type:{name:"string"}},errorNote:{defaultValue:null,description:"The error field note that appears below the default field note\n@attr {string}",name:"errorNote",required:!1,type:{name:"string"}},successNote:{defaultValue:null,description:"The success field note that appears below the default field note\n@attr {string}",name:"successNote",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Select/Select.tsx#Cre8Select"]={docgenInfo:Cre8Select.__docgenInfo,name:"Cre8Select",path:"src/components/Select/Select.tsx#Cre8Select"})}catch(__react_docgen_typescript_loader_error){}var Link=__webpack_require__("./src/components/Link/Link.tsx"),preview=__webpack_require__("./.storybook/preview.js"),jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js");const Select_stories={title:"Cre8 Components/Select",component:Cre8Select,parameters:{status:{type:"inProgress"},actions:{handles:["change"]},controls:{exclude:new RegExp(`${preview.excludeRegexArray.join("|")}|^formResetCallback$|^onChange$|^type$|^value$`)}},decorators:[decorator.w],args:{id:"selectId",name:"selectName",items:[{label:"Option Item 1",value:"option-item-1"},{label:"Option Item 2",value:"option-item-2"},{label:"Option Item 3",value:"option-item-3"},{label:"Option Item 4",value:"option-item-4"},{label:"Option Item 5",value:"option-item-5"},{label:"Option Item 6",value:"option-item-6"}]}},Default={},Disabled={args:{disabled:!0}},Preselected={args:{value:"option-item-1"}},FieldNote={args:{children:(0,jsx_runtime.jsxs)("div",{slot:"fieldNote",children:["Some optional help text or ",(0,jsx_runtime.jsx)(Link.L,{href:"#",children:"helpful link"})]})}},Error={args:{isError:!0,errorNote:"Short, clear error message"}},Success={args:{isSuccess:!0,successNote:"Short, clear success message"}},FieldnoteAndError={args:{fieldNote:"This is a field note.",isError:!0,errorNote:"Short, clear error message"}},FieldNoteAndSuccess={args:{fieldNote:"This is a field note.",isSuccess:!0,successNote:"Short, clear success message"}},OptionGroup={args:{items:[{optGroupLabel:"Option Group 1",options:[{label:"Option Group Item 1",value:"option-group-item-1"},{label:"Option Group Item 2",value:"option-group-item-2"},{label:"Option Group Item 3",value:"option-group-item-3"}]},{optGroupLabel:"Option Group 2",options:[{label:"Option Group Item 4",value:"option-group-item-4"},{label:"Option Group Item 5",value:"option-group-item-5"},{label:"Option Group Item 6",value:"option-group-item-6"}]},{optGroupLabel:"Option Group 3",options:[{label:"Option Group Item 7",value:"option-group-item-7"},{label:"Option Group Item 8",value:"option-group-item-8"},{label:"Option Group Item 9",value:"option-group-item-9"}]}]}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    disabled: true\n  }\n}",...Disabled.parameters?.docs?.source}}},Preselected.parameters={...Preselected.parameters,docs:{...Preselected.parameters?.docs,source:{originalSource:"{\n  args: {\n    value: 'option-item-1'\n  }\n}",...Preselected.parameters?.docs?.source}}},FieldNote.parameters={...FieldNote.parameters,docs:{...FieldNote.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <div slot="fieldNote">Some optional help text or <Cre8Link href="#">helpful link</Cre8Link></div>\n  }\n}',...FieldNote.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  args: {\n    isError: true,\n    errorNote: 'Short, clear error message'\n  }\n}",...Error.parameters?.docs?.source}}},Success.parameters={...Success.parameters,docs:{...Success.parameters?.docs,source:{originalSource:"{\n  args: {\n    isSuccess: true,\n    successNote: 'Short, clear success message'\n  }\n}",...Success.parameters?.docs?.source}}},FieldnoteAndError.parameters={...FieldnoteAndError.parameters,docs:{...FieldnoteAndError.parameters?.docs,source:{originalSource:"{\n  args: {\n    fieldNote: \"This is a field note.\",\n    isError: true,\n    errorNote: 'Short, clear error message'\n  }\n}",...FieldnoteAndError.parameters?.docs?.source}}},FieldNoteAndSuccess.parameters={...FieldNoteAndSuccess.parameters,docs:{...FieldNoteAndSuccess.parameters?.docs,source:{originalSource:"{\n  args: {\n    fieldNote: \"This is a field note.\",\n    isSuccess: true,\n    successNote: 'Short, clear success message'\n  }\n}",...FieldNoteAndSuccess.parameters?.docs?.source}}},OptionGroup.parameters={...OptionGroup.parameters,docs:{...OptionGroup.parameters?.docs,source:{originalSource:"{\n  args: {\n    items: optionGroupItems\n  }\n}",...OptionGroup.parameters?.docs?.source},description:{story:"If you have a longer list of options, group related options together.\nGrouping by type allows users to select their preference more quickly.\n\nTo create an option group, create a new item object within your `items` array\nwhich contains an `optGrouplabel` for the group name and an `options` array of items for the group.\n\n```\n{\n  optGroupLabel: 'Option Group',\n  options: [\n    { label: 'Option Group Item 1', value: 'option-group-item-1' },\n    { label: 'Option Group Item 2', value: 'option-group-item-2' },\n    { label: 'Option Group Item 3', value: 'option-group-item-3' },\n  ],\n}\n```",...OptionGroup.parameters?.docs?.description}}};const __namedExportsOrder=["Default","Disabled","Preselected","FieldNote","Error","Success","FieldnoteAndError","FieldNoteAndSuccess","OptionGroup"];try{OptionGroup.displayName="OptionGroup",OptionGroup.__docgenInfo={description:"If you have a longer list of options, group related options together.\nGrouping by type allows users to select their preference more quickly.\n\nTo create an option group, create a new item object within your `items` array\nwhich contains an `optGrouplabel` for the group name and an `options` array of items for the group.\n\n```\n{\n optGroupLabel: 'Option Group',\n options: [\n   { label: 'Option Group Item 1', value: 'option-group-item-1' },\n   { label: 'Option Group Item 2', value: 'option-group-item-2' },\n   { label: 'Option Group Item 3', value: 'option-group-item-3' },\n ],\n}\n```",displayName:"OptionGroup",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Select/Select.stories.tsx#OptionGroup"]={docgenInfo:OptionGroup.__docgenInfo,name:"OptionGroup",path:"src/components/Select/Select.stories.tsx#OptionGroup"})}catch(__react_docgen_typescript_loader_error){}}}]);