"use strict";(self.webpackChunk_cre8_dev_cre8_react=self.webpackChunk_cre8_dev_cre8_react||[]).push([[9459],{"./src/components/Tooltip/Tooltip.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Knockout:()=>Knockout,PositionDynamic:()=>PositionDynamic,PositionLeft:()=>PositionLeft,PositionRight:()=>PositionRight,PositionTop:()=>PositionTop,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Tooltip_stories});var react=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),preview=__webpack_require__("./.storybook/preview.js"),decorator=__webpack_require__("../../node_modules/.pnpm/@storybook+addon-actions@7.6.20/node_modules/@storybook/addon-actions/dist/decorator.mjs"),_lit_react=__webpack_require__("./node_modules/.pnpm/@lit+react@1.0.7_@types+react@18.2.13/node_modules/@lit/react/index.js"),tooltip=__webpack_require__("./node_modules/.pnpm/@cre8_dev+cre8-wc@1.0.3_webpack@5.98.0/node_modules/@cre8_dev/cre8-wc/lib/components/tooltip/tooltip.js");const Cre8Tooltip=(0,_lit_react.a)({react,tagName:"Cre8-tooltip",elementClass:tooltip.U,events:{onOpen:"open",onClose:"close"}});try{Cre8Tooltip.displayName="Cre8Tooltip",Cre8Tooltip.__docgenInfo={description:'The purpose of tooltips is to provide a tip or hint about what a tool, icon, link, or other interaction does.\nIf you need to present a call to action with perhaps a button for the user to click, then use\n[Popover](/docs/Cre8-components-popover--docs) instead.\n\n##Tooltip Styles\nThere are 4 alignment options for Tooltips: Top, Bottom, Right, and Left. Default placement is Bottom, below the\nelement it is describing. Top or Bottom alignment are the the preferred placement, particularly on screens that\nhave a more narrow viewport. Tooltips utilize Global styles and are not affected by brand themes.\n\n**With icon**\n- **iconRotateDegree** & **iconFlipDirection** props are optional.\n- They are used to set up the correct dirrection for icons, for example,\narrows, caret up or caret down.\n\n##Usability Considerations\nWith the exception of icons - which should always have alt text at a minimum - the UI should never rely on\nTooltips for clarity, especially because they are not always discovered by the user. If the user cannot\nintuitively understand the interface without Tooltips, the interface should be redesigned.\n\n##How to use\n- Use Tooltips to clarify the UI element the user is interacting with, not to add additional content on the page.\nAlso, do not simply restate content on the page, for example, the title of the field.\n- Tooltips should be short and to the point. Example: "Click X to do X" or "Icon Description." If a succinct\ndescription is not possible, the interaction element should be redesigned.\n- In a mouse-driven UI, Tooltips are triggered on hover (mouseover) and dismissed (disappear) when the user mouses\naway from the element. In touch UIs, a Tooltip is triggered by tapping and holding an item. The Tooltip is\ndisplayed as long as the user continues to hold the element. Tap and hold is a more advanced user behavior, and\nfurther reason for not relying on Tooltips. A novice user may never discover tap and hold for Tooltips.',displayName:"Cre8Tooltip",props:{onOpen:{defaultValue:null,description:"",name:"onOpen",required:!1,type:{name:"(e: Cre8DomEvent<Cre8Tooltip, Cre8Tooltip>) => void"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!1,type:{name:"(e: Cre8DomEvent<Cre8Tooltip, Cre8Tooltip>) => void"}},render:{defaultValue:null,description:"Example render, should not be used",name:"render",required:!1,type:{name:"() => TemplateResult<1>"}},componentClassNames:{defaultValue:null,description:"Abstraction of `classnames` that automatically includes any style modifier\nas well as any set variants.\n\nIt is expected that `variant` would be overridden in a subclass with more\nspecific types, `@property() variant?: 'foo' | 'bar'`\n@param baseClassName",name:"componentClassNames",required:!1,type:{name:"(baseClassName: string, additionalClassNames?: {}) => string"}},slotEmpty:{defaultValue:null,description:"Check if a slot is empty\n@param slotName",name:"slotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},slotNotEmpty:{defaultValue:null,description:"Check if a slot is not empty\n@param slotName",name:"slotNotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},dispatch:{defaultValue:null,description:"Dispatch a custom event.",name:"dispatch",required:!1,type:{name:"({ e, eventName, detailObj, optionsObj, }: Cre8DispatchProps) => CustomEvent<any>"}},renderOptions:{defaultValue:null,description:"@category rendering",name:"renderOptions",required:!1,type:{name:"RenderOptions"}},connectedCallback:{defaultValue:null,description:"Connected Callback Lifecycle\n1. Add window mouseover event listener\n2. Add window mouseout event listener\n3. Add mousedown event listener\n4. Set the id and aria-describedby",name:"connectedCallback",required:!1,type:{name:"() => void"}},disconnectedCallback:{defaultValue:null,description:"Disconnected Callback Lifecycle\n1. Remove window mouseover event listener\n2. Remove window mouseout event listener",name:"disconnectedCallback",required:!1,type:{name:"() => void"}},renderRoot:{defaultValue:null,description:"Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot.\n@category rendering",name:"renderRoot",required:!1,type:{name:"HTMLElement | ShadowRoot"}},isUpdatePending:{defaultValue:null,description:"True if there is a pending update as a result of calling `requestUpdate()`.\nShould only be read.\n@category updates",name:"isUpdatePending",required:!1,type:{name:"boolean"}},hasUpdated:{defaultValue:null,description:"Is set to `true` after the first update. The element code cannot assume\nthat `renderRoot` exists before the element `hasUpdated`.\n@category updates",name:"hasUpdated",required:!1,type:{name:"boolean"}},addController:{defaultValue:null,description:"Registers a `ReactiveController` to participate in the element's reactive\nupdate cycle. The element automatically calls into any registered\ncontrollers during its lifecycle callbacks.\n\nIf the element is connected when `addController()` is called, the\ncontroller's `hostConnected()` callback will be immediately called.\n@category controllers",name:"addController",required:!1,type:{name:"(controller: ReactiveController) => void"}},removeController:{defaultValue:null,description:"Removes a `ReactiveController` from the element.\n@category controllers",name:"removeController",required:!1,type:{name:"(controller: ReactiveController) => void"}},attributeChangedCallback:{defaultValue:null,description:"Synchronizes property values when attributes change.\n\nSpecifically, when an attribute is set, the corresponding property is set.\nYou should rarely need to implement this callback. If this method is\noverridden, `super.attributeChangedCallback(name, _old, value)` must be\ncalled.\n\nSee [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\non MDN for more information about the `attributeChangedCallback`.\n@category attributes",name:"attributeChangedCallback",required:!1,type:{name:"(name: string, _old: string, value: string) => void"}},requestUpdate:{defaultValue:null,description:"Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored.\n@param name name of requesting property\n@param oldValue old value of requesting property\n@param options property options to use instead of the previously\nconfigured options\n@category updates",name:"requestUpdate",required:!1,type:{name:"(name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration<unknown, unknown>) => void"}},updateComplete:{defaultValue:null,description:"Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.\n\nTo await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n@return A promise of a boolean that resolves to true if the update completed\nwithout triggering another update.\n@category updates",name:"updateComplete",required:!1,type:{name:"Promise<boolean>"}},svg:{defaultValue:null,description:"svg as a raw string\n- The icon is defined by this prop.\n- Pass in a raw svg as a String for using <cre8-icon>",name:"svg",required:!1,type:{name:"string"}},position:{defaultValue:null,description:"Positions the tooltip panel absolutely to the icon. Position overrides `isDynamic`.\n@attr {string}\n- **default** positions the tooltip panel below the trigger element\n- **top** positions the tooltip panel above the trigger element\n- **left** positions the tooltip panel left of the trigger element\n- **right** positions the tooltip panel right of the trigger element",name:"position",required:!1,type:{name:'{"default"|"top"|"left"|"right"}'}},knockout:{defaultValue:null,description:"The knockout variant for the tooltip\n@attr {boolean}\n1. If is true, the tooltip background is white\n2. If is false, the tooltip background is gray",name:"knockout",required:!1,type:{name:"boolean"}},isDynamic:{defaultValue:null,description:"The dynamic state for the tooltip. Position overrides isDynamic.\n@attr {boolean}\n- If true, the tooltip panel placement is determined by its position in the viewport\n- If false, the tooltip panel placement will be placed according to the position value",name:"isDynamic",required:!1,type:{name:"boolean"}},isActiveDynamic:{defaultValue:null,description:"The dynamic active state\n@attr {boolean}\n<br/><br/> _*This property is dynamically set_",name:"isActiveDynamic",required:!1,type:{name:"boolean"}},isActive:{defaultValue:null,description:"The active state for the tooltip\n@attr {boolean}\n- If true, the tooltip panel is visible\n- If false, the tooltip panel is hidden\n<br/><br/> _*This property is dynamically set_",name:"isActive",required:!1,type:{name:"boolean"}},ariaDescribes:{defaultValue:null,description:"Accepts the ID string of the item the tooltip is referencing\n@attr {string}\nDynmically appends its own ID to the aria-describedby attribute on the referenced element",name:"ariaDescribes",required:!1,type:{name:"string"}},_uniqueId:{defaultValue:null,description:"",name:"_uniqueId",required:!1,type:{name:"string"}},iconRotateDegree:{defaultValue:null,description:"iconRotateDegree is used for <cre8-icon> to set the arrow in the correct direction",name:"iconRotateDegree",required:!1,type:{name:"number"}},iconFlipDirection:{defaultValue:null,description:"iconFlipDirection is used for <cre8-icon> to set the icon in the correct direction",name:"iconFlipDirection",required:!1,type:{name:"string"}},_Cre8Tooltip:{defaultValue:null,description:"Query the tooltip panel element",name:"_Cre8Tooltip",required:!1,type:{name:"HTMLElement"}},_Cre8TooltipPanel:{defaultValue:null,description:"Query the tooltip panel element",name:"_Cre8TooltipPanel",required:!1,type:{name:"HTMLElement"}},isRTL:{defaultValue:null,description:"Query the document direction value\n<br/><br/> _*This property is dynamically set_",name:"isRTL",required:!1,type:{name:"boolean"}},updated:{defaultValue:null,description:"updated Callback Lifecycle\n1. Find the second slot\n2. Create a string from joining the textContent of the textnodes\n3. Set the textContent of the tip generated in the firstUpdated lifecycle callback",name:"updated",required:!1,type:{name:"() => void"}},firstUpdated:{defaultValue:null,description:"firstUpdated Callback Lifecycle\n1. If ariaDescribes is set\n  a. create an ID and assign it to the property _uniqueId\n  b. Generate an empty div, assign it the  _uniqueId and the tooltip role\n2. Set the aria-describedby on the ariaDescribes target",name:"firstUpdated",required:!1,type:{name:"() => void"}},dynamicPosition:{defaultValue:null,description:"Handle all dynamic placement",name:"dynamicPosition",required:!1,type:{name:"() => void"}},toggleActive:{defaultValue:null,description:"Set Tooltip Active State\n1. Toggle the active state between true and false\n2. If is active, set the dynamic position and custom event.\n3. If is not active, remove fire the close custom event.\n4. Toggle the active state for dynamic. This prevents a flash of the tooltip in the orginal position.",name:"toggleActive",required:!1,type:{name:"() => void"}},removeActive:{defaultValue:null,description:"Remove Active State\n1. If a specific event is fired, remove the active state.",name:"removeActive",required:!1,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tooltip/Tooltip.tsx#Cre8Tooltip"]={docgenInfo:Cre8Tooltip.__docgenInfo,name:"Cre8Tooltip",path:"src/components/Tooltip/Tooltip.tsx#Cre8Tooltip"})}catch(__react_docgen_typescript_loader_error){}var Inforaw=__webpack_require__("./node_modules/.pnpm/file+..+..+cre8-cre8-icons-0.6.0.tgz_webpack@5.98.0/node_modules/@cre8_dev/cre8-icons/lib/icons/System/Filled/Info.svg?raw"),jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js");const Tooltip_stories={title:"Cre8 Components/Tooltip",component:Cre8Tooltip,parameters:{status:{type:"inProgress"},controls:{exclude:new RegExp(`${preview.excludeRegexArray.join("|")}`)},layout:"centered",actions:{handles:["open","close"]}},decorators:[decorator.w],args:{children:(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:"Lorem ipsum dolor sit amet, sed do eiusmod tempor reallyreallylongwordthatshouldbreaktomakethetextwindownotoverflow"}),svg:Inforaw},argTypes:{ariaDescribes:{control:"text"},dynamicPosition:{table:{disable:!0}},isActive:{table:{disable:!0}},isActiveDynamic:{table:{disable:!0}},isDynamic:{control:"boolean"},isRTL:{table:{disable:!0}},knockout:{control:"boolean"},linkText:{table:{disable:!0}},linkURL:{table:{disable:!0}},onClose:{table:{disable:!0}},onOpen:{table:{disable:!0}},position:{options:["default","top","right","left"]},removeActive:{table:{disable:!0}},toggleActive:{table:{disable:!0}}}},Default={args:{}},Knockout={args:{knockout:!0}},PositionTop={args:{position:"top"}},PositionLeft={args:{position:"left"}},PositionRight={args:{position:"right"}},PositionDynamicTemplate=()=>(0,jsx_runtime.jsxs)("div",{style:{padding:"3rem",height:"100vh",width:"100%",display:"flex",flexDirection:"column",justifyContent:"space-between",alignItems:"center",position:"relative",overflow:"hidden"},children:[(0,jsx_runtime.jsx)("div",{style:{display:"flex",width:"100%",alignItems:"center",justifyContent:"center"},children:(0,jsx_runtime.jsx)(Cre8Tooltip,{isDynamic:!0,position:"top",svg:Inforaw,children:"Lorem ipsum dolor sit amet, sed do eiusmod tempor"})}),(0,jsx_runtime.jsxs)("div",{style:{display:"flex",width:"100%",alignItems:"center",justifyContent:"space-between"},children:[(0,jsx_runtime.jsx)(Cre8Tooltip,{isDynamic:!0,position:"right",svg:Inforaw,children:"Lorem ipsum dolor sit amet, sed do eiusmod tempor"}),(0,jsx_runtime.jsx)(Cre8Tooltip,{isDynamic:!0,position:"left",svg:Inforaw,children:"Lorem ipsum dolor sit amet, sed do eiusmod tempor"})]}),(0,jsx_runtime.jsx)("div",{style:{display:"flex",width:"100%",alignItems:"center",justifyContent:"center"},children:(0,jsx_runtime.jsx)(Cre8Tooltip,{isDynamic:!0,svg:Inforaw,children:"Lorem ipsum dolor sit amet, sed do eiusmod tempor"})})]});PositionDynamicTemplate.displayName="PositionDynamicTemplate";const PositionDynamic=PositionDynamicTemplate.bind({});PositionDynamic.args={},PositionDynamic.parameters={layout:"fullscreen"},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},Knockout.parameters={...Knockout.parameters,docs:{...Knockout.parameters?.docs,source:{originalSource:"{\n  args: {\n    knockout: true\n  }\n}",...Knockout.parameters?.docs?.source}}},PositionTop.parameters={...PositionTop.parameters,docs:{...PositionTop.parameters?.docs,source:{originalSource:"{\n  args: {\n    position: 'top'\n  }\n}",...PositionTop.parameters?.docs?.source}}},PositionLeft.parameters={...PositionLeft.parameters,docs:{...PositionLeft.parameters?.docs,source:{originalSource:"{\n  args: {\n    position: 'left'\n  }\n}",...PositionLeft.parameters?.docs?.source}}},PositionRight.parameters={...PositionRight.parameters,docs:{...PositionRight.parameters?.docs,source:{originalSource:"{\n  args: {\n    position: 'right'\n  }\n}",...PositionRight.parameters?.docs?.source}}},PositionDynamic.parameters={...PositionDynamic.parameters,docs:{...PositionDynamic.parameters?.docs,source:{originalSource:"() => <div style={{\n  padding: '3rem',\n  height: '100vh',\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  position: 'relative',\n  overflow: 'hidden'\n}}>\n    <div style={{\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }}>\n      <Cre8Tooltip isDynamic={true} position=\"top\" svg={svgInfoFilled}>\n        Lorem ipsum dolor sit amet, sed do eiusmod tempor\n      </Cre8Tooltip>\n    </div>\n    <div style={{\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }}>\n      <Cre8Tooltip isDynamic={true} position=\"right\" svg={svgInfoFilled}>\n        Lorem ipsum dolor sit amet, sed do eiusmod tempor\n      </Cre8Tooltip>\n      <Cre8Tooltip isDynamic={true} position=\"left\" svg={svgInfoFilled}>\n        Lorem ipsum dolor sit amet, sed do eiusmod tempor\n      </Cre8Tooltip>\n    </div>\n    <div style={{\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }}>\n      <Cre8Tooltip isDynamic={true} svg={svgInfoFilled}>\n        Lorem ipsum dolor sit amet, sed do eiusmod tempor\n      </Cre8Tooltip>\n    </div>\n  </div>",...PositionDynamic.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Knockout","PositionTop","PositionLeft","PositionRight","PositionDynamic"]}}]);