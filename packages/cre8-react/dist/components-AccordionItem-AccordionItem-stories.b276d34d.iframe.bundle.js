"use strict";(self.webpackChunk_cre8_dev_cre8_react=self.webpackChunk_cre8_dev_cre8_react||[]).push([[9447],{"./src/components/AccordionItem/AccordionItem.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BrandColoredHeader:()=>BrandColoredHeader,Default:()=>Default,HeadingTagVariantH2:()=>HeadingTagVariantH2,IconBefore:()=>IconBefore,LargeHeader:()=>LargeHeader,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,tertiaryIcon:()=>tertiaryIcon,tertiaryIconBefore:()=>tertiaryIconBefore});__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");var ___WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/AccordionItem/AccordionItem.tsx"),___WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/TextPassage/TextPassage.tsx"),_storybook_preview__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./.storybook/preview.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Cre8 Components/Accordion/Accordion Item",component:___WEBPACK_IMPORTED_MODULE_2__.u,parameters:{status:{type:"inProgress"},controls:{exclude:new RegExp(`${_storybook_preview__WEBPACK_IMPORTED_MODULE_3__.excludeRegexArray.join("|")}`)}}},Default={args:{heading:"Accordion Item Heading",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(___WEBPACK_IMPORTED_MODULE_4__.W,{children:" Accordion panel 1 content "})})}},IconBefore={args:{heading:"Accordion Item Heading",iconBefore:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(___WEBPACK_IMPORTED_MODULE_4__.W,{children:" Accordion panel 1 content "})})}},tertiaryIcon={args:{heading:"Accordion Item Heading",tertiaryIcon:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(___WEBPACK_IMPORTED_MODULE_4__.W,{children:" Accordion panel 1 content "})})}},tertiaryIconBefore={args:{heading:"Accordion Item Heading",tertiaryIcon:!0,iconBefore:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(___WEBPACK_IMPORTED_MODULE_4__.W,{children:" Accordion panel 1 content "})})}},LargeHeader={args:{heading:"Accordion Item Heading",tertiaryIcon:!0,iconBefore:!1,size:"lg",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(___WEBPACK_IMPORTED_MODULE_4__.W,{children:" Accordion panel 1 content "})})}},BrandColoredHeader={args:{heading:"Accordion Item Heading",tertiaryIcon:!0,iconBefore:!1,brandHeader:!0,size:"sm",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(___WEBPACK_IMPORTED_MODULE_4__.W,{children:" Accordion panel 1 content "})})}},HeadingTagVariantH2={args:{heading:"Accordion Item Heading",tertiaryIcon:!0,iconBefore:!1,brandHeader:!0,size:"sm",headingTagVariant:"h2",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(___WEBPACK_IMPORTED_MODULE_4__.W,{children:" Accordion panel 1 content "})})}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    heading: 'Accordion Item Heading',\n    children: <>\n        <Cre8TextPassage> Accordion panel 1 content </Cre8TextPassage>\n      </>\n  }\n}",...Default.parameters?.docs?.source}}},IconBefore.parameters={...IconBefore.parameters,docs:{...IconBefore.parameters?.docs,source:{originalSource:"{\n  args: {\n    heading: 'Accordion Item Heading',\n    iconBefore: true,\n    children: <>\n        <Cre8TextPassage> Accordion panel 1 content </Cre8TextPassage>\n      </>\n  }\n}",...IconBefore.parameters?.docs?.source}}},tertiaryIcon.parameters={...tertiaryIcon.parameters,docs:{...tertiaryIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    heading: 'Accordion Item Heading',\n    tertiaryIcon: true,\n    children: <>\n        <Cre8TextPassage> Accordion panel 1 content </Cre8TextPassage>\n      </>\n  }\n}",...tertiaryIcon.parameters?.docs?.source}}},tertiaryIconBefore.parameters={...tertiaryIconBefore.parameters,docs:{...tertiaryIconBefore.parameters?.docs,source:{originalSource:"{\n  args: {\n    heading: 'Accordion Item Heading',\n    tertiaryIcon: true,\n    iconBefore: true,\n    children: <>\n        <Cre8TextPassage> Accordion panel 1 content </Cre8TextPassage>\n      </>\n  }\n}",...tertiaryIconBefore.parameters?.docs?.source}}},LargeHeader.parameters={...LargeHeader.parameters,docs:{...LargeHeader.parameters?.docs,source:{originalSource:"{\n  args: {\n    heading: 'Accordion Item Heading',\n    tertiaryIcon: true,\n    iconBefore: false,\n    size: 'lg',\n    children: <>\n        <Cre8TextPassage> Accordion panel 1 content </Cre8TextPassage>\n      </>\n  }\n}",...LargeHeader.parameters?.docs?.source}}},BrandColoredHeader.parameters={...BrandColoredHeader.parameters,docs:{...BrandColoredHeader.parameters?.docs,source:{originalSource:"{\n  args: {\n    heading: 'Accordion Item Heading',\n    tertiaryIcon: true,\n    iconBefore: false,\n    brandHeader: true,\n    size: 'sm',\n    children: <>\n        <Cre8TextPassage> Accordion panel 1 content </Cre8TextPassage>\n      </>\n  }\n}",...BrandColoredHeader.parameters?.docs?.source}}},HeadingTagVariantH2.parameters={...HeadingTagVariantH2.parameters,docs:{...HeadingTagVariantH2.parameters?.docs,source:{originalSource:"{\n  args: {\n    heading: 'Accordion Item Heading',\n    tertiaryIcon: true,\n    iconBefore: false,\n    brandHeader: true,\n    size: 'sm',\n    headingTagVariant: 'h2',\n    children: <>\n        <Cre8TextPassage> Accordion panel 1 content </Cre8TextPassage>\n      </>\n  }\n}",...HeadingTagVariantH2.parameters?.docs?.source}}};const __namedExportsOrder=["Default","IconBefore","tertiaryIcon","tertiaryIconBefore","LargeHeader","BrandColoredHeader","HeadingTagVariantH2"]},"./src/components/AccordionItem/AccordionItem.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{u:()=>Cre8AccordionItem});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),_lit_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/@lit+react@1.0.7_@types+react@18.2.13/node_modules/@lit/react/index.js"),_cre8_dev_cre8_wc_lib_components_accordion_item_accordion_item__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/@cre8_dev+cre8-wc@1.0.3_webpack@5.98.0/node_modules/@cre8_dev/cre8-wc/lib/components/accordion-item/accordion-item.js");const Cre8AccordionItem=(0,_lit_react__WEBPACK_IMPORTED_MODULE_1__.a)({react:react__WEBPACK_IMPORTED_MODULE_0__,tagName:"Cre8-accordion-item",elementClass:_cre8_dev_cre8_wc_lib_components_accordion_item_accordion_item__WEBPACK_IMPORTED_MODULE_2__.u});try{Cre8AccordionItem.displayName="Cre8AccordionItem",Cre8AccordionItem.__docgenInfo={description:"\nThe accordion item component delivers large amounts of content in a small space\nthrough progressive disclosure. That is, the user gets key details about the\nunderlying content and can choose to expand that content within the constraints\nof the accordion item. Accordion Items work especially well on mobile interfaces or\nwhenever vertical space is at a premium.\n\n## HOW TO USE\nAvoid “nested” accordion items—that is, collapsible content within collapsible\ncontent. This type of pattern goes against UX best practices.\n\nThe Cre8 accordion item header allows for two sizes:\n'sm' [Cre8-typography-title-default] or 'lg' [Cre8-typography-title-large]\n\nA chevron is used to indicate the “expand/collapse” action, though the entire\nheader area is clickable for the same action.\n\n**NOTE**: The header of the accordion item uses h tags so be sure to choose the headingTagVariant that\nfits into the hierarchy of your html page layout. THIS WILL NOT CHANGE THE APPEARANCE OF THE HEADER.",displayName:"Cre8AccordionItem",props:{size:{defaultValue:null,description:"Users can choose between two header sizes:  'sm' [title-default] or 'lg' [title-large].\n@prop {'sm' | 'lg'} size",name:"size",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"lg"'}]}},heading:{defaultValue:null,description:"Controls the text content of the Accordion Item heading.\n@prop {string} heading",name:"heading",required:!1,type:{name:"string"}},render:{defaultValue:null,description:"Example render, should not be used",name:"render",required:!1,type:{name:"() => TemplateResult<1>"}},componentClassNames:{defaultValue:null,description:"Abstraction of `classnames` that automatically includes any style modifier\nas well as any set variants.\n\nIt is expected that `variant` would be overridden in a subclass with more\nspecific types, `@property() variant?: 'foo' | 'bar'`\n@param baseClassName",name:"componentClassNames",required:!1,type:{name:"(baseClassName: string, additionalClassNames?: {}) => string"}},slotEmpty:{defaultValue:null,description:"Check if a slot is empty\n@param slotName",name:"slotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},slotNotEmpty:{defaultValue:null,description:"Check if a slot is not empty\n@param slotName",name:"slotNotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},dispatch:{defaultValue:null,description:"Dispatch a custom event.",name:"dispatch",required:!1,type:{name:"({ e, eventName, detailObj, optionsObj, }: Cre8DispatchProps) => CustomEvent<any>"}},renderOptions:{defaultValue:null,description:"@category rendering",name:"renderOptions",required:!1,type:{name:"RenderOptions"}},connectedCallback:{defaultValue:null,description:"Invoked when the component is added to the document's DOM.\n\nIn `connectedCallback()` you should setup tasks that should only occur when\nthe element is connected to the document. The most common of these is\nadding event listeners to nodes external to the element, like a keydown\nevent handler added to the window.\n\n```ts\nconnectedCallback() {\n  super.connectedCallback();\n  addEventListener('keydown', this._handleKeydown);\n}\n```\n\nTypically, anything done in `connectedCallback()` should be undone when the\nelement is disconnected, in `disconnectedCallback()`.",name:"connectedCallback",required:!1,type:{name:"() => void"}},disconnectedCallback:{defaultValue:null,description:"Invoked when the component is removed from the document's DOM.\n\nThis callback is the main signal to the element that it may no longer be\nused. `disconnectedCallback()` should ensure that nothing is holding a\nreference to the element (such as event listeners added to nodes external\nto the element), so that it is free to be garbage collected.\n\n```ts\ndisconnectedCallback() {\n  super.disconnectedCallback();\n  window.removeEventListener('keydown', this._handleKeydown);\n}\n```\n\nAn element may be re-connected after being disconnected.\n@category lifecycle",name:"disconnectedCallback",required:!1,type:{name:"() => void"}},renderRoot:{defaultValue:null,description:"Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot.\n@category rendering",name:"renderRoot",required:!1,type:{name:"HTMLElement | ShadowRoot"}},isUpdatePending:{defaultValue:null,description:"True if there is a pending update as a result of calling `requestUpdate()`.\nShould only be read.\n@category updates",name:"isUpdatePending",required:!1,type:{name:"boolean"}},hasUpdated:{defaultValue:null,description:"Is set to `true` after the first update. The element code cannot assume\nthat `renderRoot` exists before the element `hasUpdated`.\n@category updates",name:"hasUpdated",required:!1,type:{name:"boolean"}},addController:{defaultValue:null,description:"Registers a `ReactiveController` to participate in the element's reactive\nupdate cycle. The element automatically calls into any registered\ncontrollers during its lifecycle callbacks.\n\nIf the element is connected when `addController()` is called, the\ncontroller's `hostConnected()` callback will be immediately called.\n@category controllers",name:"addController",required:!1,type:{name:"(controller: ReactiveController) => void"}},removeController:{defaultValue:null,description:"Removes a `ReactiveController` from the element.\n@category controllers",name:"removeController",required:!1,type:{name:"(controller: ReactiveController) => void"}},attributeChangedCallback:{defaultValue:null,description:"Synchronizes property values when attributes change.\n\nSpecifically, when an attribute is set, the corresponding property is set.\nYou should rarely need to implement this callback. If this method is\noverridden, `super.attributeChangedCallback(name, _old, value)` must be\ncalled.\n\nSee [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\non MDN for more information about the `attributeChangedCallback`.\n@category attributes",name:"attributeChangedCallback",required:!1,type:{name:"(name: string, _old: string, value: string) => void"}},requestUpdate:{defaultValue:null,description:"Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored.\n@param name name of requesting property\n@param oldValue old value of requesting property\n@param options property options to use instead of the previously\nconfigured options\n@category updates",name:"requestUpdate",required:!1,type:{name:"(name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration<unknown, unknown>) => void"}},updateComplete:{defaultValue:null,description:"Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.\n\nTo await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n@return A promise of a boolean that resolves to true if the update completed\nwithout triggering another update.\n@category updates",name:"updateComplete",required:!1,type:{name:"Promise<boolean>"}},isActive:{defaultValue:null,description:"When true, the Accordion Item is opens, when false it closes;\n@prop {boolean} isActive",name:"isActive",required:!1,type:{name:"boolean"}},accordionItemId:{defaultValue:null,description:"Optional custom id for the accordion item, if one is not set, a random id is generated for you.\n@prop {string} accordionItemId",name:"accordionItemId",required:!1,type:{name:"string"}},iconBefore:{defaultValue:null,description:"Controls the positioning of the dropdown icon in relation to the text, true puts the icon before the text\nand false/undefined default the icon to the opposite side of the accordion item\n@prop {boolean} iconBefore",name:"iconBefore",required:!1,type:{name:"boolean"}},tertiaryIcon:{defaultValue:null,description:"Controls the appearance  of dropdown icon as being an icon-only button. true renders the tertiary variant and\nfalse/undefined renders the default secondary appearance.\n@prop {boolean} tertiaryIcon",name:"tertiaryIcon",required:!1,type:{name:"boolean"}},headingTagVariant:{defaultValue:null,description:"Purely meant to help the user structure the HTML page hierarchy. Does not change the\nheader size. Defaults to 'h3'\n@prop {'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'} headingTagVariant",name:"headingTagVariant",required:!1,type:{name:"enum",value:[{value:'"h1"'},{value:'"h2"'},{value:'"h3"'},{value:'"h4"'},{value:'"h5"'},{value:'"h6"'}]}},brandHeader:{defaultValue:null,description:"Controls whether the header takes on the theme's 'brand-strong' color\n@prop {boolean} brandHeader",name:"brandHeader",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AccordionItem/AccordionItem.tsx#Cre8AccordionItem"]={docgenInfo:Cre8AccordionItem.__docgenInfo,name:"Cre8AccordionItem",path:"src/components/AccordionItem/AccordionItem.tsx#Cre8AccordionItem"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/TextPassage/TextPassage.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>Cre8TextPassage});var _lit_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/@lit+react@1.0.7_@types+react@18.2.13/node_modules/@lit/react/index.js"),_cre8_dev_cre8_wc_lib_components_text_passage_text_passage__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/@cre8_dev+cre8-wc@1.0.3_webpack@5.98.0/node_modules/@cre8_dev/cre8-wc/lib/components/text-passage/text-passage.js"),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");const Cre8TextPassage=(0,_lit_react__WEBPACK_IMPORTED_MODULE_0__.a)({react:react__WEBPACK_IMPORTED_MODULE_2__,tagName:"Cre8-text-passage",elementClass:_cre8_dev_cre8_wc_lib_components_text_passage_text_passage__WEBPACK_IMPORTED_MODULE_1__.W});try{Cre8TextPassage.displayName="Cre8TextPassage",Cre8TextPassage.__docgenInfo={description:"",displayName:"Cre8TextPassage",props:{size:{defaultValue:null,description:"Size variant\n- **small** renders smaller typography than the default variant\n- **default** renders default typography variant\n- **large** renders larger typography than the default variant",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"default"'},{value:'"large"'}]}},render:{defaultValue:null,description:"Example render, should not be used",name:"render",required:!1,type:{name:"() => TemplateResult<1>"}},componentClassNames:{defaultValue:null,description:"Abstraction of `classnames` that automatically includes any style modifier\nas well as any set variants.\n\nIt is expected that `variant` would be overridden in a subclass with more\nspecific types, `@property() variant?: 'foo' | 'bar'`\n@param baseClassName",name:"componentClassNames",required:!1,type:{name:"(baseClassName: string, additionalClassNames?: {}) => string"}},slotEmpty:{defaultValue:null,description:"Check if a slot is empty\n@param slotName",name:"slotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},slotNotEmpty:{defaultValue:null,description:"Check if a slot is not empty\n@param slotName",name:"slotNotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},dispatch:{defaultValue:null,description:"Dispatch a custom event.",name:"dispatch",required:!1,type:{name:"({ e, eventName, detailObj, optionsObj, }: Cre8DispatchProps) => CustomEvent<any>"}},renderOptions:{defaultValue:null,description:"@category rendering",name:"renderOptions",required:!1,type:{name:"RenderOptions"}},connectedCallback:{defaultValue:null,description:"Add the light dom styles when this component is connected to a page",name:"connectedCallback",required:!1,type:{name:"() => void"}},disconnectedCallback:{defaultValue:null,description:"Invoked when the component is removed from the document's DOM.\n\nThis callback is the main signal to the element that it may no longer be\nused. `disconnectedCallback()` should ensure that nothing is holding a\nreference to the element (such as event listeners added to nodes external\nto the element), so that it is free to be garbage collected.\n\n```ts\ndisconnectedCallback() {\n  super.disconnectedCallback();\n  window.removeEventListener('keydown', this._handleKeydown);\n}\n```\n\nAn element may be re-connected after being disconnected.\n@category lifecycle",name:"disconnectedCallback",required:!1,type:{name:"() => void"}},renderRoot:{defaultValue:null,description:"Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot.\n@category rendering",name:"renderRoot",required:!1,type:{name:"HTMLElement | ShadowRoot"}},isUpdatePending:{defaultValue:null,description:"True if there is a pending update as a result of calling `requestUpdate()`.\nShould only be read.\n@category updates",name:"isUpdatePending",required:!1,type:{name:"boolean"}},hasUpdated:{defaultValue:null,description:"Is set to `true` after the first update. The element code cannot assume\nthat `renderRoot` exists before the element `hasUpdated`.\n@category updates",name:"hasUpdated",required:!1,type:{name:"boolean"}},addController:{defaultValue:null,description:"Registers a `ReactiveController` to participate in the element's reactive\nupdate cycle. The element automatically calls into any registered\ncontrollers during its lifecycle callbacks.\n\nIf the element is connected when `addController()` is called, the\ncontroller's `hostConnected()` callback will be immediately called.\n@category controllers",name:"addController",required:!1,type:{name:"(controller: ReactiveController) => void"}},removeController:{defaultValue:null,description:"Removes a `ReactiveController` from the element.\n@category controllers",name:"removeController",required:!1,type:{name:"(controller: ReactiveController) => void"}},attributeChangedCallback:{defaultValue:null,description:"Synchronizes property values when attributes change.\n\nSpecifically, when an attribute is set, the corresponding property is set.\nYou should rarely need to implement this callback. If this method is\noverridden, `super.attributeChangedCallback(name, _old, value)` must be\ncalled.\n\nSee [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\non MDN for more information about the `attributeChangedCallback`.\n@category attributes",name:"attributeChangedCallback",required:!1,type:{name:"(name: string, _old: string, value: string) => void"}},requestUpdate:{defaultValue:null,description:"Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored.\n@param name name of requesting property\n@param oldValue old value of requesting property\n@param options property options to use instead of the previously\nconfigured options\n@category updates",name:"requestUpdate",required:!1,type:{name:"(name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration<unknown, unknown>) => void"}},updateComplete:{defaultValue:null,description:"Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.\n\nTo await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n@return A promise of a boolean that resolves to true if the update completed\nwithout triggering another update.\n@category updates",name:"updateComplete",required:!1,type:{name:"Promise<boolean>"}},inverted:{defaultValue:null,description:"Inverted variant\n1) Used for dark backgrounds",name:"inverted",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TextPassage/TextPassage.tsx#Cre8TextPassage"]={docgenInfo:Cre8TextPassage.__docgenInfo,name:"Cre8TextPassage",path:"src/components/TextPassage/TextPassage.tsx#Cre8TextPassage"})}catch(__react_docgen_typescript_loader_error){}}}]);