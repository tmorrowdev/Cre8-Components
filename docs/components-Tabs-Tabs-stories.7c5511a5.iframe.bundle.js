"use strict";(self.webpackChunk_cre8_dev_cre8_react=self.webpackChunk_cre8_dev_cre8_react||[]).push([[4105],{"./.storybook/components/Fpo/Fpo.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m:()=>Fpo});__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/classnames@2.3.2/node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js");const Fpo=_ref=>{let{styleModifier,children}=_ref;const componentClassName=classnames__WEBPACK_IMPORTED_MODULE_1___default()("fpo",styleModifier,{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:componentClassName,children})};Fpo.displayName="Fpo";try{Fpo.displayName="Fpo",Fpo.__docgenInfo={description:"Primary UI component for user interaction",displayName:"Fpo",props:{styleModifier:{defaultValue:null,description:"CSS class names that can be appended to the component.",name:"styleModifier",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Child node(s) that can be nested inside component",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[".storybook/components/Fpo/Fpo.tsx#Fpo"]={docgenInfo:Fpo.__docgenInfo,name:"Fpo",path:".storybook/components/Fpo/Fpo.tsx#Fpo"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Tabs/Tabs.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,FullWidth:()=>FullWidth,Small:()=>Small,WithActiveIndex:()=>WithActiveIndex,WithOverflow:()=>WithOverflow,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Tabs_stories});var decorator=__webpack_require__("../../node_modules/.pnpm/@storybook+addon-actions@7.6.20/node_modules/@storybook/addon-actions/dist/decorator.mjs"),react=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),_lit_react=__webpack_require__("./node_modules/.pnpm/@lit+react@1.0.7_@types+react@18.2.13/node_modules/@lit/react/index.js"),tabs=__webpack_require__("./node_modules/.pnpm/@cre8_dev+cre8-wc@1.0.3_webpack@5.98.0/node_modules/@cre8_dev/cre8-wc/lib/components/tabs/tabs.js");const Cre8Tabs=(0,_lit_react.a)({react,tagName:"Cre8-tabs",elementClass:tabs.r,events:{onTabChange:"tabChange"}});try{Cre8Tabs.displayName="Cre8Tabs",Cre8Tabs.__docgenInfo={description:"Tabs are used to quickly navigate back and forth between views.\nThe Tab design and interaction varies depending on the requirements for your organization and project.\nStandardizing on the best individual controls will improve usability and reduce development and QA time.\n\nCreate a standard set of Tab controls: Primary Tabs (for system navigation), Secondary Tabs (for sub navigation within a screen).\n\n## Usability Guidelines\n- The selected Tab should be visually differentiated from the other Tabs. The deselected Tabs should still look enabled. Dimming the other Tabs decreases the legibility of items that are actually active and clickable.\n- There must be a minimum of 2 Tabs.\n- Showing status in a Tab is non-standard (such as 0%, 10%).\n- Tab labels and content should be parallel, with the exception of a Summary or Overview Tab which can be a rollup of content across other Tabs.\n- Keep the font size of the Tabs the same. If the Tabs are a fixed width and one of the labels is too long, don't resize the text to fit and consider wrapping text to a second line.\n- If possible, don't truncate text because it makes it harder to understand what's in the Tab.\n- Try not to use more than six Tabs to keep the UI uncluttered.\n- Do not stack Tabs on top of each other, and do not nest Tabs within Tabs. Find alternate ways of navigating page hierarchy.",displayName:"Cre8Tabs",props:{onTabChange:{defaultValue:null,description:"",name:"onTabChange",required:!1,type:{name:"(e: Cre8DomEvent<Cre8Tabs, Cre8Tabs>) => void"}},size:{defaultValue:null,description:"Tab sizes\n- **default** displays the cre8-tab text with cre8-typography-label-default\n- **sm** displays the cre8-tab text with cre8-typography-label-small\n@attr",name:"size",required:!1,type:{name:'{"sm"}'}},render:{defaultValue:null,description:"Example render, should not be used",name:"render",required:!1,type:{name:"() => TemplateResult<1>"}},componentClassNames:{defaultValue:null,description:"Abstraction of `classnames` that automatically includes any style modifier\nas well as any set variants.\n\nIt is expected that `variant` would be overridden in a subclass with more\nspecific types, `@property() variant?: 'foo' | 'bar'`\n@param baseClassName",name:"componentClassNames",required:!1,type:{name:"(baseClassName: string, additionalClassNames?: {}) => string"}},slotEmpty:{defaultValue:null,description:"Check if a slot is empty\n@param slotName",name:"slotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},slotNotEmpty:{defaultValue:null,description:"Check if a slot is not empty\n@param slotName",name:"slotNotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},dispatch:{defaultValue:null,description:"Dispatch a custom event.",name:"dispatch",required:!1,type:{name:"({ e, eventName, detailObj, optionsObj, }: Cre8DispatchProps) => CustomEvent<any>"}},renderOptions:{defaultValue:null,description:"@category rendering",name:"renderOptions",required:!1,type:{name:"RenderOptions"}},connectedCallback:{defaultValue:null,description:"Connected Callback Lifecycle\n1. Fires each time a custom element is appended into a document-connected element.",name:"connectedCallback",required:!1,type:{name:"() => void"}},disconnectedCallback:{defaultValue:null,description:"Disconnected Callback Lifecycle\n1. Removes the event listeners to ensure that any memory allocated by your component\n   will be cleaned up when your component is destroyed or disconnected from the page.",name:"disconnectedCallback",required:!1,type:{name:"() => void"}},renderRoot:{defaultValue:null,description:"Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot.\n@category rendering",name:"renderRoot",required:!1,type:{name:"HTMLElement | ShadowRoot"}},isUpdatePending:{defaultValue:null,description:"True if there is a pending update as a result of calling `requestUpdate()`.\nShould only be read.\n@category updates",name:"isUpdatePending",required:!1,type:{name:"boolean"}},hasUpdated:{defaultValue:null,description:"Is set to `true` after the first update. The element code cannot assume\nthat `renderRoot` exists before the element `hasUpdated`.\n@category updates",name:"hasUpdated",required:!1,type:{name:"boolean"}},addController:{defaultValue:null,description:"Registers a `ReactiveController` to participate in the element's reactive\nupdate cycle. The element automatically calls into any registered\ncontrollers during its lifecycle callbacks.\n\nIf the element is connected when `addController()` is called, the\ncontroller's `hostConnected()` callback will be immediately called.\n@category controllers",name:"addController",required:!1,type:{name:"(controller: ReactiveController) => void"}},removeController:{defaultValue:null,description:"Removes a `ReactiveController` from the element.\n@category controllers",name:"removeController",required:!1,type:{name:"(controller: ReactiveController) => void"}},attributeChangedCallback:{defaultValue:null,description:"Synchronizes property values when attributes change.\n\nSpecifically, when an attribute is set, the corresponding property is set.\nYou should rarely need to implement this callback. If this method is\noverridden, `super.attributeChangedCallback(name, _old, value)` must be\ncalled.\n\nSee [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\non MDN for more information about the `attributeChangedCallback`.\n@category attributes",name:"attributeChangedCallback",required:!1,type:{name:"(name: string, _old: string, value: string) => void"}},requestUpdate:{defaultValue:null,description:"Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored.\n@param name name of requesting property\n@param oldValue old value of requesting property\n@param options property options to use instead of the previously\nconfigured options\n@category updates",name:"requestUpdate",required:!1,type:{name:"(name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration<unknown, unknown>) => void"}},updateComplete:{defaultValue:null,description:"Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.\n\nTo await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n@return A promise of a boolean that resolves to true if the update completed\nwithout triggering another update.\n@category updates",name:"updateComplete",required:!1,type:{name:"Promise<boolean>"}},isRTL:{defaultValue:null,description:"Query the document direction value\n\n_*This property is dynamically set_",name:"isRTL",required:!1,type:{name:"boolean"}},updated:{defaultValue:null,description:"Updated Lifecycle Hook\n1. remove selected state from previously selected tab\n2. Checks to see if the old `activeIndex` property has been updated.\n   If the new value doesn't equal the old value, activate the proper tab",name:"updated",required:!1,type:{name:"(changedProperties: Map<string, unknown>) => Promise<void>"}},firstUpdated:{defaultValue:null,description:"First Updated Lifecycle Hook\n1. Sets the `aria-labelledby` prop for accessible tabs if user doesn't define the `ariaLabelledBy` prop.\n2. Sets the active tab if activeIndex is defined. Otherwise, set the first tab as active by default.\n3. Initialize isStart and isEnd.\n4. Set the varaint on the cre8-tab according to the cre8-tabs variant.",name:"firstUpdated",required:!1,type:{name:"() => Promise<void>"}},fullWidth:{defaultValue:null,description:"Displays a set of tabs with a spanning the width of the element\n@attr {boolean}",name:"fullWidth",required:!1,type:{name:"boolean"}},tabId:{defaultValue:null,description:"Auto Increment id to sync tab and tab panel\n\n_*This property is dynamically set_",name:"tabId",required:!1,type:{name:"string"}},activeIndex:{defaultValue:null,description:"Sets the initial active tab (e.g. 0 sets the first tab, 1 sets the second tab, etc.)\n@attr {number}",name:"activeIndex",required:!1,type:{name:"number"}},activeTab:{defaultValue:null,description:"The active tab\n\n_*This property is dynamically set_",name:"activeTab",required:!1,type:{name:"Cre8Tab"}},isStart:{defaultValue:null,description:"If position from left is greater than 0, set isStart to false. Otherwise set isStart to true.\n\n_*This property is dynamically set_\n@attr {boolean}",name:"isStart",required:!1,type:{name:"boolean"}},isEnd:{defaultValue:null,description:"If last child is fully in the viewport, set isEnd to true. Otherwise, set isEnd to false.\n\n_*This property is dynamically set_\n@attr {boolean}",name:"isEnd",required:!1,type:{name:"boolean"}},_Cre8TabItems:{defaultValue:null,description:"Query all the tab items",name:"_Cre8TabItems",required:!1,type:{name:"Cre8Tab[]"}},_Cre8TabPanels:{defaultValue:null,description:"Query all the tab panels",name:"_Cre8TabPanels",required:!1,type:{name:"Cre8TabPanel[]"}},_Cre8TabsHeader:{defaultValue:null,description:"Query the tabs header element",name:"_Cre8TabsHeader",required:!1,type:{name:"HTMLElement"}},_Cre8TabsHeaderList:{defaultValue:null,description:"Query the tabs header list element",name:"_Cre8TabsHeaderList",required:!1,type:{name:"HTMLElement"}},handleResize:{defaultValue:null,description:"Handle Resize\n1. On resize, if position from left is greater than 0, set isStart to false. Otherwise set isStart to true.\n2. On resize, If last child is fully in the viewport, set isEnd to true. Otherwise, set isEnd to false.\n@fires resize",name:"handleResize",required:!1,type:{name:"() => void"}},handleScroll:{defaultValue:null,description:"Handle Scroll\n1. On scroll, if position from left is greater than 0, set isStart to false. Otherwise set isStart to true.\n2. On scroll, If last child is fully in the viewport, set isEnd to true. Otherwise, set isEnd to false.\n@fires scroll",name:"handleScroll",required:!1,type:{name:"() => void"}},setIsStart:{defaultValue:null,description:"Set isStart State\n1. If position from left is greater than 0, set isStart to false. Otherwise set isStart to true.",name:"setIsStart",required:!1,type:{name:"() => void"}},setIsEnd:{defaultValue:null,description:"Set isEnd State\n1. If last child is fully in the viewport, set isEnd to true. Otherwise, set isEnd to false.",name:"setIsEnd",required:!1,type:{name:"() => void"}},isInViewport:{defaultValue:null,description:"Check if last overflow list item is in the viewport\n1. Get children of the overflow list inner container and get bounding client rectangle of last child\n2. Return true if the left property is greater than or equal to 0 and if the right property is less\nthan or equal to the window inner width or document client width",name:"isInViewport",required:!1,type:{name:"() => boolean"}},setTabVariant:{defaultValue:null,description:"Set Tab Variant\n1. Loop through all the cre8-tab Components and set the size to 'sm' if the parent has size 'sm'.",name:"setTabVariant",required:!1,type:{name:"() => void"}},setTabAttributes:{defaultValue:null,description:"Set the attributes on tab and tab panel\n1. Sets the index value on the tab items.\n2. Sets the `aria-labelledby` on the tab items.\n3. Set the index and id on the tab-panel to match the tab.",name:"setTabAttributes",required:!1,type:{name:"() => void"}},setActiveTab:{defaultValue:null,description:"Set Active Tab\n1. Sets the active state for the selected tab.\n2. Sets the active state for the tab panel with the same index value as the selected tab.",name:"setActiveTab",required:!1,type:{name:"() => void"}},setActiveTabFocus:{defaultValue:null,description:"Set Active Tab Focus",name:"setActiveTabFocus",required:!1,type:{name:"() => void"}},handleTabSelected:{defaultValue:null,description:"Handle Tab Selected\n1. Only continue if event target is a tab\n2. If tab is active, make the previous selected tab inactive.\n3. Set the clicked tab active.\n4. Emit the custom event.\n@fires tabSelected",name:"handleTabSelected",required:!1,type:{name:"(event: MouseEvent) => void"}},handleKeydown:{defaultValue:null,description:"Handle Keydown\n1. If the active tab is not focused then handle the keydown events.\n2. On keydown of the right arrow, make the next tab active.\n3. On keydown of the left arrow, make the previous tab active.\n4. On keydown of the home key, make the first tab active.\n5. On keydown of the end key, make the last tab active.\n6. On keydown of the escape key, remove the focus.\n@fires keydown",name:"handleKeydown",required:!1,type:{name:"(event: KeyboardEvent) => void"}},setSelectedToPreviousTab:{defaultValue:null,description:"Set Selected To Previous Tab\n1. Get current selected Tab index then deactivate previously selected tab.\n2. If current activeIndex is in first position then move the tab focus to last tab.\n3. Set the active tab and focus.\n4. Emit custom event.\n@fires tabChange",name:"setSelectedToPreviousTab",required:!1,type:{name:"(currentTab: Cre8Tab) => void"}},setSelectedToNextTab:{defaultValue:null,description:"Set Selected To Next Tab\n1. Get current selected Tab index then deactivate previously selected tab.\n2. If current activeIndex is in last position then move the tab focus to first tab.\n3. Set the active tab and focus.\n4. Emit custom event.\n@fires tabChange",name:"setSelectedToNextTab",required:!1,type:{name:"(currentTab: Cre8Tab) => void"}},removePreviousActiveTab:{defaultValue:null,description:"Remove Active from Previous Tab\n1. Get current selected Tab index then deactivate previously selected tab\n2. If current activeIndex is in first position then move the tab focus to last tab",name:"removePreviousActiveTab",required:!1,type:{name:"() => void"}},emitEvent:{defaultValue:null,description:"Emit custom event",name:"emitEvent",required:!1,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tabs/Tabs.tsx#Cre8Tabs"]={docgenInfo:Cre8Tabs.__docgenInfo,name:"Cre8Tabs",path:"src/components/Tabs/Tabs.tsx#Cre8Tabs"})}catch(__react_docgen_typescript_loader_error){}var tab=__webpack_require__("./node_modules/.pnpm/@cre8_dev+cre8-wc@1.0.3_webpack@5.98.0/node_modules/@cre8_dev/cre8-wc/lib/components/tab/tab.js");const Cre8Tab=(0,_lit_react.a)({react,tagName:"Cre8-tab",elementClass:tab.c});try{Cre8Tab.displayName="Cre8Tab",Cre8Tab.__docgenInfo={description:"",displayName:"Cre8Tab",props:{size:{defaultValue:null,description:"Tab sizes\n- **default** displays the tab text with cre8-typography-label-default\n- **sm** displays the tab text with cre8-typography-label-small and decrease padding\n\n_*This property is dynamically set_",name:"size",required:!1,type:{name:'"sm"'}},render:{defaultValue:null,description:"Example render, should not be used",name:"render",required:!1,type:{name:"() => TemplateResult<1>"}},componentClassNames:{defaultValue:null,description:"Abstraction of `classnames` that automatically includes any style modifier\nas well as any set variants.\n\nIt is expected that `variant` would be overridden in a subclass with more\nspecific types, `@property() variant?: 'foo' | 'bar'`\n@param baseClassName",name:"componentClassNames",required:!1,type:{name:"(baseClassName: string, additionalClassNames?: {}) => string"}},slotEmpty:{defaultValue:null,description:"Check if a slot is empty\n@param slotName",name:"slotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},slotNotEmpty:{defaultValue:null,description:"Check if a slot is not empty\n@param slotName",name:"slotNotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},dispatch:{defaultValue:null,description:"Dispatch a custom event.",name:"dispatch",required:!1,type:{name:"({ e, eventName, detailObj, optionsObj, }: Cre8DispatchProps) => CustomEvent<any>"}},renderOptions:{defaultValue:null,description:"@category rendering",name:"renderOptions",required:!1,type:{name:"RenderOptions"}},connectedCallback:{defaultValue:null,description:"Invoked when the component is added to the document's DOM.\n\nIn `connectedCallback()` you should setup tasks that should only occur when\nthe element is connected to the document. The most common of these is\nadding event listeners to nodes external to the element, like a keydown\nevent handler added to the window.\n\n```ts\nconnectedCallback() {\n  super.connectedCallback();\n  addEventListener('keydown', this._handleKeydown);\n}\n```\n\nTypically, anything done in `connectedCallback()` should be undone when the\nelement is disconnected, in `disconnectedCallback()`.\n@category lifecycle",name:"connectedCallback",required:!1,type:{name:"() => void"}},disconnectedCallback:{defaultValue:null,description:"Invoked when the component is removed from the document's DOM.\n\nThis callback is the main signal to the element that it may no longer be\nused. `disconnectedCallback()` should ensure that nothing is holding a\nreference to the element (such as event listeners added to nodes external\nto the element), so that it is free to be garbage collected.\n\n```ts\ndisconnectedCallback() {\n  super.disconnectedCallback();\n  window.removeEventListener('keydown', this._handleKeydown);\n}\n```\n\nAn element may be re-connected after being disconnected.\n@category lifecycle",name:"disconnectedCallback",required:!1,type:{name:"() => void"}},renderRoot:{defaultValue:null,description:"Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot.\n@category rendering",name:"renderRoot",required:!1,type:{name:"HTMLElement | ShadowRoot"}},isUpdatePending:{defaultValue:null,description:"True if there is a pending update as a result of calling `requestUpdate()`.\nShould only be read.\n@category updates",name:"isUpdatePending",required:!1,type:{name:"boolean"}},hasUpdated:{defaultValue:null,description:"Is set to `true` after the first update. The element code cannot assume\nthat `renderRoot` exists before the element `hasUpdated`.\n@category updates",name:"hasUpdated",required:!1,type:{name:"boolean"}},addController:{defaultValue:null,description:"Registers a `ReactiveController` to participate in the element's reactive\nupdate cycle. The element automatically calls into any registered\ncontrollers during its lifecycle callbacks.\n\nIf the element is connected when `addController()` is called, the\ncontroller's `hostConnected()` callback will be immediately called.\n@category controllers",name:"addController",required:!1,type:{name:"(controller: ReactiveController) => void"}},removeController:{defaultValue:null,description:"Removes a `ReactiveController` from the element.\n@category controllers",name:"removeController",required:!1,type:{name:"(controller: ReactiveController) => void"}},attributeChangedCallback:{defaultValue:null,description:"Synchronizes property values when attributes change.\n\nSpecifically, when an attribute is set, the corresponding property is set.\nYou should rarely need to implement this callback. If this method is\noverridden, `super.attributeChangedCallback(name, _old, value)` must be\ncalled.\n\nSee [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\non MDN for more information about the `attributeChangedCallback`.\n@category attributes",name:"attributeChangedCallback",required:!1,type:{name:"(name: string, _old: string, value: string) => void"}},requestUpdate:{defaultValue:null,description:"Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored.\n@param name name of requesting property\n@param oldValue old value of requesting property\n@param options property options to use instead of the previously\nconfigured options\n@category updates",name:"requestUpdate",required:!1,type:{name:"(name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration<unknown, unknown>) => void"}},updateComplete:{defaultValue:null,description:"Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.\n\nTo await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n@return A promise of a boolean that resolves to true if the update completed\nwithout triggering another update.\n@category updates",name:"updateComplete",required:!1,type:{name:"Promise<boolean>"}},isActive:{defaultValue:null,description:"If is true, tab has active state and cooresponding tab panel is visible.\n\n_*This property is dynamically set_",name:"isActive",required:!1,type:{name:"boolean"}},updated:{defaultValue:null,description:"Updated\n1. Called when the element's DOM has been updated and rendered.\n2. If has ariaLabelledBy, then set the tab ID with the value.\n3. If the tab is active, set the tabindex to 0 and aria-selected to true.",name:"updated",required:!1,type:{name:"(changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>) => void"}},index:{defaultValue:null,description:"Used to align the tab with the tab panel\n\n_*This property is dynamically set_",name:"index",required:!1,type:{name:"number"}},ariaLabelledBy:{defaultValue:null,description:"Used to connect tab trigger and tab panel for accessibility\n\n_*This property is dynamically set_",name:"ariaLabelledBy",required:!1,type:{name:"string"}},_Cre8Tab:{defaultValue:null,description:"Query the tab element",name:"_Cre8Tab",required:!1,type:{name:"HTMLButtonElement"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tab/Tab.tsx#Cre8Tab"]={docgenInfo:Cre8Tab.__docgenInfo,name:"Cre8Tab",path:"src/components/Tab/Tab.tsx#Cre8Tab"})}catch(__react_docgen_typescript_loader_error){}var tab_panel=__webpack_require__("./node_modules/.pnpm/@cre8_dev+cre8-wc@1.0.3_webpack@5.98.0/node_modules/@cre8_dev/cre8-wc/lib/components/tab-panel/tab-panel.js");const Cre8TabPanel=(0,_lit_react.a)({react,tagName:"Cre8-tab-panel",elementClass:tab_panel.S});try{Cre8TabPanel.displayName="Cre8TabPanel",Cre8TabPanel.__docgenInfo={description:"",displayName:"Cre8TabPanel",props:{render:{defaultValue:null,description:"Example render, should not be used",name:"render",required:!1,type:{name:"() => TemplateResult<1>"}},componentClassNames:{defaultValue:null,description:"Abstraction of `classnames` that automatically includes any style modifier\nas well as any set variants.\n\nIt is expected that `variant` would be overridden in a subclass with more\nspecific types, `@property() variant?: 'foo' | 'bar'`\n@param baseClassName",name:"componentClassNames",required:!1,type:{name:"(baseClassName: string, additionalClassNames?: {}) => string"}},slotEmpty:{defaultValue:null,description:"Check if a slot is empty\n@param slotName",name:"slotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},slotNotEmpty:{defaultValue:null,description:"Check if a slot is not empty\n@param slotName",name:"slotNotEmpty",required:!1,type:{name:"(slotName: string) => boolean"}},dispatch:{defaultValue:null,description:"Dispatch a custom event.",name:"dispatch",required:!1,type:{name:"({ e, eventName, detailObj, optionsObj, }: Cre8DispatchProps) => CustomEvent<any>"}},renderOptions:{defaultValue:null,description:"@category rendering",name:"renderOptions",required:!1,type:{name:"RenderOptions"}},connectedCallback:{defaultValue:null,description:"Invoked when the component is added to the document's DOM.\n\nIn `connectedCallback()` you should setup tasks that should only occur when\nthe element is connected to the document. The most common of these is\nadding event listeners to nodes external to the element, like a keydown\nevent handler added to the window.\n\n```ts\nconnectedCallback() {\n  super.connectedCallback();\n  addEventListener('keydown', this._handleKeydown);\n}\n```\n\nTypically, anything done in `connectedCallback()` should be undone when the\nelement is disconnected, in `disconnectedCallback()`.\n@category lifecycle",name:"connectedCallback",required:!1,type:{name:"() => void"}},disconnectedCallback:{defaultValue:null,description:"Invoked when the component is removed from the document's DOM.\n\nThis callback is the main signal to the element that it may no longer be\nused. `disconnectedCallback()` should ensure that nothing is holding a\nreference to the element (such as event listeners added to nodes external\nto the element), so that it is free to be garbage collected.\n\n```ts\ndisconnectedCallback() {\n  super.disconnectedCallback();\n  window.removeEventListener('keydown', this._handleKeydown);\n}\n```\n\nAn element may be re-connected after being disconnected.\n@category lifecycle",name:"disconnectedCallback",required:!1,type:{name:"() => void"}},renderRoot:{defaultValue:null,description:"Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot.\n@category rendering",name:"renderRoot",required:!1,type:{name:"HTMLElement | ShadowRoot"}},isUpdatePending:{defaultValue:null,description:"True if there is a pending update as a result of calling `requestUpdate()`.\nShould only be read.\n@category updates",name:"isUpdatePending",required:!1,type:{name:"boolean"}},hasUpdated:{defaultValue:null,description:"Is set to `true` after the first update. The element code cannot assume\nthat `renderRoot` exists before the element `hasUpdated`.\n@category updates",name:"hasUpdated",required:!1,type:{name:"boolean"}},addController:{defaultValue:null,description:"Registers a `ReactiveController` to participate in the element's reactive\nupdate cycle. The element automatically calls into any registered\ncontrollers during its lifecycle callbacks.\n\nIf the element is connected when `addController()` is called, the\ncontroller's `hostConnected()` callback will be immediately called.\n@category controllers",name:"addController",required:!1,type:{name:"(controller: ReactiveController) => void"}},removeController:{defaultValue:null,description:"Removes a `ReactiveController` from the element.\n@category controllers",name:"removeController",required:!1,type:{name:"(controller: ReactiveController) => void"}},attributeChangedCallback:{defaultValue:null,description:"Synchronizes property values when attributes change.\n\nSpecifically, when an attribute is set, the corresponding property is set.\nYou should rarely need to implement this callback. If this method is\noverridden, `super.attributeChangedCallback(name, _old, value)` must be\ncalled.\n\nSee [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\non MDN for more information about the `attributeChangedCallback`.\n@category attributes",name:"attributeChangedCallback",required:!1,type:{name:"(name: string, _old: string, value: string) => void"}},requestUpdate:{defaultValue:null,description:"Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored.\n@param name name of requesting property\n@param oldValue old value of requesting property\n@param options property options to use instead of the previously\nconfigured options\n@category updates",name:"requestUpdate",required:!1,type:{name:"(name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration<unknown, unknown>) => void"}},updateComplete:{defaultValue:null,description:"Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.\n\nTo await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n@return A promise of a boolean that resolves to true if the update completed\nwithout triggering another update.\n@category updates",name:"updateComplete",required:!1,type:{name:"Promise<boolean>"}},isActive:{defaultValue:null,description:"Indicates if the panel is active\n<br/><br/> _*This property is dynamically set_",name:"isActive",required:!1,type:{name:"boolean"}},firstUpdated:{defaultValue:null,description:"First updated\n1. If skipFocusOnPanel is not true, then allow tabbing to the panel.",name:"firstUpdated",required:!1,type:{name:"() => void"}},index:{defaultValue:null,description:"Used to align the tab panel with the tab\n<br/><br/> _*This property is dynamically set_",name:"index",required:!1,type:{name:"number"}},skipFocusOnPanel:{defaultValue:null,description:"This will remove focus on panel element",name:"skipFocusOnPanel",required:!1,type:{name:"boolean"}},_Cre8TabPanel:{defaultValue:null,description:"Query the tab panel element",name:"_Cre8TabPanel",required:!1,type:{name:"HTMLElement"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TabPanel/TabPanel.tsx#Cre8TabPanel"]={docgenInfo:Cre8TabPanel.__docgenInfo,name:"Cre8TabPanel",path:"src/components/TabPanel/TabPanel.tsx#Cre8TabPanel"})}catch(__react_docgen_typescript_loader_error){}var Fpo=__webpack_require__("./.storybook/components/Fpo/Fpo.tsx"),preview=__webpack_require__("./.storybook/preview.js"),jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js");const Tabs_stories={title:"Cre8 Components/Tabs",component:Cre8Tabs,parameters:{status:{type:"inProgress"},controls:{exclude:new RegExp(`${preview.excludeRegexArray.join("|")}|^activeTab$|^emitEvent$|^handleResize$|^handleScroll$|^isEnd$|^isRTL$|^isStart$|^setIsStart$|^setIsEnd$|^tabChange$|^tabId$|^activeTab$|^isInViewport$|^setTabVariant$|^setTabAttributes$|^setActiveTab$|^setActiveTabFocus$|^setSelectedToPreviousTab$|^setSelectedToNextTab$|^removePreviousActiveTab$|^emitEvent$`)},actions:{handles:["tabChange","tabSelected"]}},decorators:[decorator.w],args:{children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Cre8Tab,{children:"Tab 1"}),(0,jsx_runtime.jsx)(Cre8TabPanel,{slot:"panel",children:(0,jsx_runtime.jsx)(Fpo.m,{children:"Tab 1 content"})}),(0,jsx_runtime.jsx)(Cre8Tab,{children:"Tab 2"}),(0,jsx_runtime.jsx)(Cre8TabPanel,{slot:"panel",children:(0,jsx_runtime.jsx)(Fpo.m,{children:"Tab 2 content"})}),(0,jsx_runtime.jsx)(Cre8Tab,{children:"Tab 3"}),(0,jsx_runtime.jsx)(Cre8TabPanel,{slot:"panel",children:(0,jsx_runtime.jsx)(Fpo.m,{children:"Tab 3 content"})})]})},argTypes:{size:{control:{type:"text"}}}},Default={args:{}},FullWidth={args:{fullWidth:!0}},Small={args:{size:"sm"}},WithActiveIndex={args:{activeIndex:1}},WithOverflow={args:{children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Cre8Tab,{children:"Tab 1"}),(0,jsx_runtime.jsx)(Cre8TabPanel,{slot:"panel",children:(0,jsx_runtime.jsx)(Fpo.m,{children:"Tab 1 content"})}),(0,jsx_runtime.jsx)(Cre8Tab,{children:"Tab 2"}),(0,jsx_runtime.jsx)(Cre8TabPanel,{slot:"panel",children:(0,jsx_runtime.jsx)(Fpo.m,{children:"Tab 2 content"})}),(0,jsx_runtime.jsx)(Cre8Tab,{children:"Tab 3"}),(0,jsx_runtime.jsx)(Cre8TabPanel,{slot:"panel",children:(0,jsx_runtime.jsx)(Fpo.m,{children:"Tab 3 content"})}),(0,jsx_runtime.jsx)(Cre8Tab,{children:"Tab 4"}),(0,jsx_runtime.jsx)(Cre8TabPanel,{slot:"panel",children:(0,jsx_runtime.jsx)(Fpo.m,{children:"Tab 4 content"})}),(0,jsx_runtime.jsx)(Cre8Tab,{children:"Tab 5"}),(0,jsx_runtime.jsx)(Cre8TabPanel,{slot:"panel",children:(0,jsx_runtime.jsx)(Fpo.m,{children:"Tab 5 content"})}),(0,jsx_runtime.jsx)(Cre8Tab,{children:"Tab 6"}),(0,jsx_runtime.jsx)(Cre8TabPanel,{slot:"panel",children:(0,jsx_runtime.jsx)(Fpo.m,{children:"Tab 6 content"})}),(0,jsx_runtime.jsx)(Cre8Tab,{children:"Tab 7"}),(0,jsx_runtime.jsx)(Cre8TabPanel,{slot:"panel",children:(0,jsx_runtime.jsx)(Fpo.m,{children:"Tab 7 content"})}),(0,jsx_runtime.jsx)(Cre8Tab,{children:"Tab 8"}),(0,jsx_runtime.jsx)(Cre8TabPanel,{slot:"panel",children:(0,jsx_runtime.jsx)(Fpo.m,{children:"Tab 8 content"})}),(0,jsx_runtime.jsx)(Cre8Tab,{children:"Tab 9"}),(0,jsx_runtime.jsx)(Cre8TabPanel,{slot:"panel",children:(0,jsx_runtime.jsx)(Fpo.m,{children:"Tab 9 content"})}),(0,jsx_runtime.jsx)(Cre8Tab,{children:"Tab 10"}),(0,jsx_runtime.jsx)(Cre8TabPanel,{slot:"panel",children:(0,jsx_runtime.jsx)(Fpo.m,{children:"Tab 10 content"})}),(0,jsx_runtime.jsx)(Cre8Tab,{children:"Tab 11"}),(0,jsx_runtime.jsx)(Cre8TabPanel,{slot:"panel",children:(0,jsx_runtime.jsx)(Fpo.m,{children:"Tab 11 content"})}),(0,jsx_runtime.jsx)(Cre8Tab,{children:"Tab 12"}),(0,jsx_runtime.jsx)(Cre8TabPanel,{slot:"panel",children:(0,jsx_runtime.jsx)(Fpo.m,{children:"Tab 12 content"})})]})}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},FullWidth.parameters={...FullWidth.parameters,docs:{...FullWidth.parameters?.docs,source:{originalSource:"{\n  args: {\n    fullWidth: true\n  }\n}",...FullWidth.parameters?.docs?.source}}},Small.parameters={...Small.parameters,docs:{...Small.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'sm'\n  }\n}",...Small.parameters?.docs?.source}}},WithActiveIndex.parameters={...WithActiveIndex.parameters,docs:{...WithActiveIndex.parameters?.docs,source:{originalSource:"{\n  args: {\n    activeIndex: 1\n  }\n}",...WithActiveIndex.parameters?.docs?.source}}},WithOverflow.parameters={...WithOverflow.parameters,docs:{...WithOverflow.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <>\n      <Cre8Tab>Tab 1</Cre8Tab>\n      <Cre8TabPanel slot="panel">\n        <Fpo>Tab 1 content</Fpo>\n      </Cre8TabPanel>\n      <Cre8Tab>Tab 2</Cre8Tab>\n      <Cre8TabPanel slot="panel">\n        <Fpo>Tab 2 content</Fpo>\n      </Cre8TabPanel>\n      <Cre8Tab>Tab 3</Cre8Tab>\n      <Cre8TabPanel slot="panel">\n        <Fpo>Tab 3 content</Fpo>\n      </Cre8TabPanel>\n      <Cre8Tab>Tab 4</Cre8Tab>\n      <Cre8TabPanel slot="panel">\n        <Fpo>Tab 4 content</Fpo>\n      </Cre8TabPanel>\n      <Cre8Tab>Tab 5</Cre8Tab>\n      <Cre8TabPanel slot="panel">\n        <Fpo>Tab 5 content</Fpo>\n      </Cre8TabPanel>\n      <Cre8Tab>Tab 6</Cre8Tab>\n      <Cre8TabPanel slot="panel">\n        <Fpo>Tab 6 content</Fpo>\n      </Cre8TabPanel>\n      <Cre8Tab>Tab 7</Cre8Tab>\n      <Cre8TabPanel slot="panel">\n        <Fpo>Tab 7 content</Fpo>\n      </Cre8TabPanel>\n      <Cre8Tab>Tab 8</Cre8Tab>\n      <Cre8TabPanel slot="panel">\n        <Fpo>Tab 8 content</Fpo>\n      </Cre8TabPanel>\n      <Cre8Tab>Tab 9</Cre8Tab>\n      <Cre8TabPanel slot="panel">\n        <Fpo>Tab 9 content</Fpo>\n      </Cre8TabPanel>\n      <Cre8Tab>Tab 10</Cre8Tab>\n      <Cre8TabPanel slot="panel">\n        <Fpo>Tab 10 content</Fpo>\n      </Cre8TabPanel>\n      <Cre8Tab>Tab 11</Cre8Tab>\n      <Cre8TabPanel slot="panel">\n        <Fpo>Tab 11 content</Fpo>\n      </Cre8TabPanel>\n      <Cre8Tab>Tab 12</Cre8Tab>\n      <Cre8TabPanel slot="panel">\n        <Fpo>Tab 12 content</Fpo>\n      </Cre8TabPanel>\n    </>\n  }\n}',...WithOverflow.parameters?.docs?.source},description:{story:"Navigating through Tabs via scrolling is a becoming a popular interaction pattern.\nHowever, it is generally only used for content heavy web sites, as opposed to table heavy software.\nBe cautious if implementing this pattern, and be sure that it is only used where content is consistent across \nall Tabs and moving from one to the next would be a natural organic experience, instead of disjointed or disconnected.",...WithOverflow.parameters?.docs?.description}}};const __namedExportsOrder=["Default","FullWidth","Small","WithActiveIndex","WithOverflow"];try{WithOverflow.displayName="WithOverflow",WithOverflow.__docgenInfo={description:"Navigating through Tabs via scrolling is a becoming a popular interaction pattern.\nHowever, it is generally only used for content heavy web sites, as opposed to table heavy software.\nBe cautious if implementing this pattern, and be sure that it is only used where content is consistent across \nall Tabs and moving from one to the next would be a natural organic experience, instead of disjointed or disconnected.",displayName:"WithOverflow",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tabs/Tabs.stories.tsx#WithOverflow"]={docgenInfo:WithOverflow.__docgenInfo,name:"WithOverflow",path:"src/components/Tabs/Tabs.stories.tsx#WithOverflow"})}catch(__react_docgen_typescript_loader_error){}}}]);